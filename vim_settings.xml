<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="$USER_HOME$/github_projects/seq2graph/amr2seq/data_prep/amr_utils.py" timestamp="1500610818254">
        <mark key="'" line="154" column="4" />
        <mark key="[" line="119" column="0" />
        <mark key="]" line="119" column="0" />
        <mark key="^" line="196" column="80" />
        <mark key="." line="119" column="0" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/HRGSample.py" timestamp="1513563075786">
        <mark key="'" line="578" column="13" />
        <mark key="[" line="501" column="0" />
        <mark key="]" line="501" column="0" />
        <mark key="^" line="486" column="5" />
        <mark key="." line="501" column="0" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/util/hgraph/hgraph.py" timestamp="1511819855135">
        <mark key="'" line="15" column="28" />
        <mark key="[" line="15" column="0" />
        <mark key="]" line="15" column="1" />
        <mark key="." line="15" column="1" />
        <mark key="^" line="15" column="1" />
      </file>
      <file name="/Library/Python/2.7/site-packages/keras/models.py" timestamp="1507572523705">
        <mark key="'" line="2" column="23" />
        <mark key="[" line="720" column="21" />
        <mark key="]" line="722" column="20" />
        <mark key="^" line="722" column="20" />
        <mark key="." line="722" column="20" />
      </file>
      <file name="$USER_HOME$/AMRParser/src/edu/stanford/nlp/parser/nndep/CacheTransition.java" timestamp="1514953987173">
        <mark key="'" line="60" column="17" />
        <mark key="[" line="370" column="10" />
        <mark key="]" line="359" column="10" />
        <mark key="." line="359" column="10" />
        <mark key="^" line="359" column="10" />
      </file>
      <file name="$USER_HOME$/data_processing/categorize_amr.py" timestamp="1515482880350">
        <mark key="'" line="426" column="54" />
      </file>
      <file name="$USER_HOME$/ConvParser/common/data.py" timestamp="1515125054578">
        <mark key="'" line="85" column="8" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/amr_fragment.py" timestamp="1523844969564">
        <mark key="'" line="329" column="12" />
      </file>
      <file name="/Library/Python/2.7/site-packages/keras/engine/topology.py" timestamp="1507572628652">
        <mark key="'" line="17" column="49" />
        <mark key="[" line="392" column="8" />
        <mark key="]" line="392" column="8" />
        <mark key="." line="392" column="8" />
        <mark key="^" line="392" column="9" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/amr_utils.py" timestamp="1525144516524">
        <mark key="'" line="40" column="20" />
        <mark key="[" line="38" column="8" />
        <mark key="]" line="38" column="8" />
        <mark key="^" line="86" column="5" />
        <mark key="." line="38" column="8" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/amr_utils.py" timestamp="1521646790198">
        <mark key="'" line="26" column="24" />
        <mark key="[" line="30" column="1" />
        <mark key="]" line="30" column="1" />
        <mark key="^" line="30" column="1" />
        <mark key="." line="30" column="1" />
      </file>
      <file name="$USER_HOME$/models/syntaxnet/dragnn/tools/trainer.py" timestamp="1507648617574">
        <mark key="'" line="195" column="19" />
        <mark key="[" line="55" column="27" />
        <mark key="]" line="55" column="26" />
        <mark key="^" line="55" column="26" />
        <mark key="." line="55" column="26" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/tmp_amr_graph" timestamp="1525193684660">
        <mark key="'" line="466" column="8" />
      </file>
      <file name="$USER_HOME$/Cache-Seq2seq/oracle/oracle.py" timestamp="1525404207859">
        <mark key="'" line="148" column="51" />
        <mark key="[" line="286" column="8" />
        <mark key="]" line="286" column="9" />
        <mark key="^" line="286" column="9" />
        <mark key="." line="286" column="9" />
      </file>
      <file name="$USER_HOME$/Aligner/preprocessing.py" timestamp="1524510512337">
        <mark key="'" line="341" column="30" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/constants.py" timestamp="1478440893183">
        <mark key="'" line="53" column="0" />
        <mark key="[" line="20" column="21" />
        <mark key="]" line="20" column="21" />
        <mark key="^" line="53" column="0" />
        <mark key="." line="20" column="21" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/rule.py" timestamp="1511814972784">
        <mark key="'" line="374" column="30" />
        <mark key="[" line="427" column="34" />
        <mark key="]" line="427" column="7" />
        <mark key="^" line="427" column="7" />
        <mark key="." line="427" column="7" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/re_utils.py" timestamp="1525242835500">
        <mark key="'" line="79" column="0" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/hrg_learn.py" timestamp="1524547234123">
        <mark key="'" line="508" column="34" />
        <mark key="[" line="608" column="62" />
        <mark key="]" line="609" column="57" />
        <mark key="." line="609" column="57" />
        <mark key="^" line="609" column="57" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/hrg_width.py" timestamp="1523847419074">
        <mark key="'" line="349" column="40" />
      </file>
      <file name="$USER_HOME$/AMRParser/daisyluAMR/system/daisylu_output.py" timestamp="1507574321487">
        <mark key="'" line="46" column="52" />
        <mark key="[" line="1063" column="48" />
        <mark key="]" line="1063" column="47" />
        <mark key="." line="1063" column="47" />
        <mark key="^" line="1063" column="47" />
      </file>
      <file name="$USER_HOME$/ConvParser/categorize_concept.py" timestamp="1515487538174">
        <mark key="'" line="271" column="32" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/postprocessing/amr_format.py" timestamp="1525277269515">
        <mark key="'" line="113" column="25" />
        <mark key="[" line="44" column="4" />
        <mark key="]" line="62" column="25" />
        <mark key="." line="207" column="11" />
        <mark key="^" line="207" column="11" />
      </file>
      <file name="$USER_HOME$/AMRParser/CacheTransition/oracle.py" timestamp="1515615653217">
        <mark key="'" line="79" column="61" />
        <mark key="[" line="107" column="74" />
        <mark key="]" line="107" column="82" />
        <mark key="^" line="107" column="82" />
        <mark key="." line="107" column="82" />
      </file>
      <file name="$USER_HOME$/AMRParser/src/edu/stanford/nlp/parser/nndep/AMRGraph.java" timestamp="1510364711817">
        <mark key="'" line="90" column="14" />
        <mark key="[" line="23" column="0" />
        <mark key="]" line="23" column="0" />
        <mark key="^" line="74" column="1" />
        <mark key="." line="23" column="0" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" timestamp="1525527369004">
        <mark key="'" line="1752" column="8" />
        <mark key="[" line="667" column="4" />
        <mark key="]" line="1180" column="38" />
        <mark key="." line="667" column="4" />
        <mark key="^" line="667" column="4" />
      </file>
      <file name="$USER_HOME$/AMRParser/src/edu/stanford/nlp/parser/nndep/DependencyTree.java" timestamp="1516637703209">
        <mark key="'" line="59" column="2" />
        <mark key="[" line="69" column="4" />
        <mark key="]" line="69" column="5" />
        <mark key="." line="69" column="5" />
        <mark key="^" line="69" column="5" />
      </file>
      <file name="$USER_HOME$/data_processing/alignment_utils.py" timestamp="1518572680728">
        <mark key="'" line="426" column="37" />
        <mark key="[" line="344" column="14" />
        <mark key="]" line="345" column="0" />
        <mark key="^" line="345" column="0" />
        <mark key="." line="345" column="0" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/ioutil.py" timestamp="1525401409390">
        <mark key="'" line="417" column="26" />
        <mark key="[" line="239" column="0" />
        <mark key="]" line="241" column="106" />
        <mark key="^" line="239" column="0" />
        <mark key="." line="239" column="0" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/constants.py" timestamp="1525200115557">
        <mark key="'" line="30" column="8" />
        <mark key="[" line="30" column="31" />
        <mark key="]" line="30" column="58" />
        <mark key="." line="64" column="1" />
        <mark key="^" line="64" column="1" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/postprocessing/date_extraction.py" timestamp="1525276723602">
        <mark key="'" line="8" column="149" />
        <mark key="[" line="8" column="0" />
        <mark key="]" line="8" column="441" />
        <mark key="." line="8" column="440" />
        <mark key="^" line="8" column="440" />
      </file>
      <file name="$USER_HOME$/AMRParser/src/edu/stanford/nlp/io/IOUtils.java" timestamp="1491962694595">
        <mark key="'" line="667" column="17" />
        <mark key="[" line="652" column="5" />
        <mark key="]" line="653" column="15" />
        <mark key="^" line="653" column="15" />
        <mark key="." line="653" column="15" />
      </file>
      <file name="$USER_HOME$/SHRG-extraction/alignment_utils.py" timestamp="1524751490556">
        <mark key="'" line="2" column="0" />
        <mark key="[" line="1" column="23" />
        <mark key="]" line="2" column="12" />
        <mark key="." line="2" column="12" />
        <mark key="^" line="2" column="12" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/treewidth.py" timestamp="1524546202347">
        <mark key="'" line="468" column="30" />
        <mark key="[" line="513" column="20" />
        <mark key="]" line="513" column="35" />
        <mark key="^" line="513" column="35" />
        <mark key="." line="513" column="35" />
      </file>
      <file name="$USER_HOME$/Cache-Seq2seq/NP2P_data_stream.py" timestamp="1525454151414">
        <mark key="'" line="129" column="12" />
      </file>
      <file name="$USER_HOME$/Cache-Seq2seq/NP2P_beam_decoder.py" timestamp="1525454181885">
        <mark key="'" line="307" column="40" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/date_extraction.py" timestamp="1525280110302">
        <mark key="[" line="10" column="441" />
        <mark key="]" line="10" column="448" />
        <mark key="^" line="10" column="448" />
        <mark key="." line="10" column="448" />
      </file>
      <file name="$USER_HOME$/AMRParser/src/edu/stanford/nlp/parser/nndep/ConceptLabel.java" timestamp="1484684640982">
        <mark key="'" line="69" column="11" />
        <mark key="[" line="81" column="17" />
        <mark key="]" line="81" column="43" />
        <mark key="." line="81" column="43" />
        <mark key="^" line="81" column="43" />
      </file>
      <file name="$USER_HOME$/Aligner/Aligner.py" timestamp="1524795055498">
        <mark key="'" line="199" column="35" />
        <mark key="[" line="813" column="79" />
        <mark key="]" line="814" column="23" />
        <mark key="." line="814" column="23" />
        <mark key="^" line="814" column="23" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/cacheTransition.py" timestamp="1525190884405">
        <mark key="'" line="29" column="4" />
        <mark key="[" line="197" column="32" />
        <mark key="]" line="197" column="32" />
        <mark key="." line="197" column="32" />
        <mark key="^" line="197" column="32" />
      </file>
      <file name="$USER_HOME$/github_projects/seq2graph/amr2seq/data_prep/treewidth.py" timestamp="1480247731932">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="17" column="0" />
        <mark key="]" line="17" column="0" />
        <mark key="." line="17" column="0" />
        <mark key="^" line="17" column="0" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/fragment_forest.py" timestamp="1480507121150">
        <mark key="'" line="184" column="69" />
        <mark key="[" line="1003" column="12" />
        <mark key="]" line="1003" column="12" />
        <mark key="^" line="1003" column="12" />
        <mark key="." line="1003" column="12" />
      </file>
      <file name="$USER_HOME$/Cache-Seq2seq/oracle/cacheConfiguration.py" timestamp="1525404218274">
        <mark key="'" line="255" column="39" />
        <mark key="[" line="273" column="0" />
        <mark key="]" line="273" column="0" />
        <mark key="." line="273" column="0" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/NP2P_data_stream.py" timestamp="1518642120649">
        <mark key="'" line="34" column="23" />
        <mark key="[" line="35" column="33" />
        <mark key="]" line="38" column="73" />
        <mark key="." line="38" column="73" />
        <mark key="^" line="38" column="73" />
      </file>
      <file name="$USER_HOME$/SHRG-extraction/amr_fragment.py" timestamp="1524750969704">
        <mark key="'" line="556" column="28" />
        <mark key="[" line="556" column="26" />
        <mark key="]" line="556" column="26" />
        <mark key="." line="556" column="26" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/cacheTransitionParser.py" timestamp="1524547045252">
        <mark key="'" line="230" column="25" />
        <mark key="[" line="231" column="8" />
        <mark key="]" line="231" column="9" />
        <mark key="^" line="231" column="9" />
        <mark key="." line="231" column="9" />
      </file>
      <file name="$USER_HOME$/SHRG-extraction/hrg_learn.py" timestamp="1524750833792">
        <mark key="'" line="650" column="4" />
        <mark key="[" line="572" column="25" />
        <mark key="]" line="572" column="43" />
        <mark key="^" line="572" column="43" />
        <mark key="." line="572" column="43" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/util/hgraph/hypergraph.py" timestamp="1513624349355">
        <mark key="'" line="236" column="50" />
        <mark key="[" line="150" column="8" />
        <mark key="]" line="153" column="42" />
        <mark key="^" line="153" column="43" />
        <mark key="." line="153" column="43" />
      </file>
      <file name="$USER_HOME$/Aligner/common/AMRGraph.py" timestamp="1524350528679">
        <mark key="'" line="586" column="4" />
      </file>
      <file name="$USER_HOME$/github_projects/seq2graph/amr2seq/data_prep/amr_graph.py" timestamp="1500748165318">
        <mark key="'" line="759" column="4" />
        <mark key="[" line="26" column="15" />
        <mark key="]" line="26" column="18" />
        <mark key="." line="26" column="18" />
        <mark key="^" line="26" column="18" />
      </file>
      <file name="$USER_HOME$/data_processing/utils.py" timestamp="1518617987018">
        <mark key="'" line="126" column="4" />
        <mark key="[" line="296" column="4" />
        <mark key="]" line="296" column="9" />
        <mark key="^" line="296" column="9" />
        <mark key="." line="296" column="9" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/Aligner/Aligner.py" timestamp="1525146682223">
        <mark key="'" line="524" column="89" />
        <mark key="[" line="162" column="17" />
        <mark key="]" line="162" column="17" />
        <mark key="." line="162" column="17" />
        <mark key="^" line="162" column="17" />
      </file>
      <file name="$USER_HOME$/github_projects/seq2graph/treewidth/treewidth.py" timestamp="1480247358014">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="33" column="18" />
        <mark key="]" line="34" column="19" />
        <mark key="." line="34" column="19" />
        <mark key="^" line="34" column="19" />
      </file>
      <file name="$USER_HOME$/data_processing/oracle/cacheConfiguration.py" timestamp="1516838915760">
        <mark key="'" line="247" column="12" />
        <mark key="[" line="224" column="35" />
        <mark key="]" line="224" column="35" />
        <mark key="^" line="233" column="23" />
        <mark key="." line="224" column="35" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/cacheConfiguration.py" timestamp="1525400318370">
        <mark key="'" line="245" column="40" />
        <mark key="[" line="191" column="20" />
        <mark key="]" line="191" column="34" />
        <mark key="." line="191" column="34" />
        <mark key="^" line="191" column="34" />
      </file>
      <file name="$USER_HOME$/github_projects/seq2graph/tfamr/src/seq2seq_sa.py" timestamp="1478020932535">
        <mark key="'" line="524" column="23" />
        <mark key="[" line="568" column="26" />
        <mark key="]" line="568" column="26" />
        <mark key="^" line="568" column="26" />
        <mark key="." line="568" column="26" />
      </file>
      <file name="$USER_HOME$/data_processing/oracle/oracle_data.py" timestamp="1516671198315">
        <mark key="'" line="0" column="10" />
        <mark key="[" line="40" column="39" />
        <mark key="]" line="41" column="26" />
        <mark key="." line="41" column="26" />
        <mark key="^" line="41" column="26" />
      </file>
      <file name="$USER_HOME$/AMRParser/notes" timestamp="1481718540996">
        <mark key="'" line="6" column="0" />
        <mark key="[" line="130" column="0" />
        <mark key="]" line="132" column="10" />
        <mark key="^" line="132" column="10" />
        <mark key="." line="132" column="10" />
      </file>
      <file name="$USER_HOME$/github_projects/seq2graph/amr2seq/data_prep/categorize_dated.py" timestamp="1500614393650">
        <mark key="'" line="553" column="57" />
        <mark key="[" line="395" column="8" />
        <mark key="]" line="398" column="22" />
        <mark key="^" line="432" column="3" />
        <mark key="." line="557" column="0" />
      </file>
      <file name="$USER_HOME$/AMRParser/CacheTransition/ioutil.py" timestamp="1515007338620">
        <mark key="'" line="263" column="0" />
        <mark key="[" line="259" column="16" />
        <mark key="]" line="259" column="16" />
        <mark key="." line="259" column="16" />
        <mark key="^" line="259" column="16" />
      </file>
      <file name="$USER_HOME$/AMRParser/src/edu/stanford/nlp/parser/nndep/NeuralParam.java" timestamp="1489550491214">
        <mark key="'" line="16" column="40" />
        <mark key="[" line="20" column="4" />
        <mark key="]" line="20" column="5" />
        <mark key="." line="20" column="5" />
        <mark key="^" line="20" column="5" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" timestamp="1525504595197">
        <mark key="p" line="172" column="44" />
        <mark key="'" line="823" column="28" />
        <mark key="[" line="780" column="28" />
        <mark key="]" line="780" column="28" />
        <mark key="." line="780" column="28" />
        <mark key="^" line="818" column="5" />
      </file>
      <file name="$USER_HOME$/AMRParser/CacheTransition/AMRGraph.py" timestamp="1515006441367">
        <mark key="'" line="106" column="59" />
        <mark key="[" line="112" column="42" />
        <mark key="]" line="112" column="42" />
        <mark key="^" line="112" column="42" />
        <mark key="." line="112" column="42" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/amrtreewidth.py" timestamp="1524547031909">
        <mark key="'" line="839" column="23" />
        <mark key="[" line="853" column="0" />
        <mark key="]" line="853" column="0" />
        <mark key="^" line="2" column="0" />
        <mark key="." line="853" column="0" />
      </file>
      <file name="$USER_HOME$/AMRParser/CacheTransition/cacheConfiguration.py" timestamp="1515008601844">
        <mark key="'" line="65" column="64" />
        <mark key="[" line="208" column="16" />
        <mark key="]" line="208" column="17" />
        <mark key="." line="208" column="17" />
        <mark key="^" line="208" column="17" />
      </file>
      <file name="$USER_HOME$/data_processing/Aligner.py" timestamp="1515655655306">
        <mark key="'" line="23" column="0" />
        <mark key="[" line="687" column="30" />
        <mark key="]" line="687" column="98" />
        <mark key="^" line="7" column="0" />
        <mark key="." line="813" column="127" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/AMRGraph.py" timestamp="1525189222242">
        <mark key="[" line="83" column="16" />
        <mark key="]" line="83" column="17" />
        <mark key="^" line="83" column="17" />
        <mark key="." line="83" column="17" />
      </file>
      <file name="$USER_HOME$/data_processing/oracle/cacheTransition.py" timestamp="1516991076349">
        <mark key="'" line="214" column="23" />
        <mark key="[" line="144" column="21" />
        <mark key="]" line="145" column="34" />
        <mark key="^" line="145" column="34" />
        <mark key="." line="145" column="34" />
      </file>
      <file name="$USER_HOME$/data_processing/amr_graph.py" timestamp="1518405273128">
        <mark key="'" line="751" column="12" />
        <mark key="[" line="719" column="32" />
        <mark key="]" line="720" column="88" />
        <mark key="^" line="720" column="88" />
        <mark key="." line="720" column="88" />
      </file>
      <file name="$USER_HOME$/java_workspace/StanfordParser/src/edu/stanford/nlp/parser/nndep/Util.java" timestamp="1481283840269">
        <mark key="'" line="168" column="28" />
        <mark key="[" line="139" column="25" />
        <mark key="]" line="139" column="27" />
        <mark key="^" line="139" column="27" />
        <mark key="." line="139" column="27" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/fragment_hypergraph.py" timestamp="1480516204906">
        <mark key="'" line="47" column="41" />
        <mark key="[" line="24" column="24" />
        <mark key="]" line="24" column="24" />
        <mark key="^" line="24" column="24" />
        <mark key="." line="24" column="24" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/amr_parser.py" timestamp="1478441668944">
        <mark key="'" line="63" column="20" />
        <mark key="[" line="83" column="44" />
        <mark key="]" line="83" column="44" />
        <mark key="^" line="83" column="71" />
        <mark key="." line="83" column="44" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/NP2P_beam_decoder.py" timestamp="1519236351801">
        <mark key="'" line="313" column="22" />
        <mark key="[" line="180" column="17" />
        <mark key="]" line="181" column="34" />
        <mark key="." line="181" column="34" />
        <mark key="^" line="181" column="34" />
      </file>
      <file name="$USER_HOME$/AMRParser/daisyluAMR/networks/AMR_NN_Forward.py" timestamp="1507597474611">
        <mark key="'" line="105" column="12" />
        <mark key="[" line="122" column="42" />
        <mark key="]" line="122" column="20" />
        <mark key="." line="122" column="20" />
        <mark key="^" line="122" column="20" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/oracle.py" timestamp="1525401401318">
        <mark key="'" line="42" column="23" />
        <mark key="[" line="50" column="0" />
        <mark key="]" line="50" column="0" />
        <mark key="^" line="284" column="35" />
        <mark key="." line="50" column="0" />
      </file>
      <file name="$USER_HOME$/AMRParser/src/edu/stanford/nlp/parser/nndep/AMRParser.java" timestamp="1519162948077">
        <mark key="'" line="701" column="29" />
        <mark key="[" line="2531" column="106" />
        <mark key="]" line="2531" column="109" />
        <mark key="^" line="2531" column="109" />
        <mark key="." line="2531" column="109" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/alignment_utils.py" timestamp="1516218198270">
        <mark key="'" line="240" column="52" />
        <mark key="[" line="329" column="44" />
        <mark key="]" line="329" column="46" />
        <mark key="^" line="329" column="46" />
        <mark key="." line="329" column="46" />
      </file>
      <file name="$USER_HOME$/Aligner/AMRGraph.py" timestamp="1524350342026">
        <mark key="'" line="169" column="30" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/NP2P_trainer.py" timestamp="1517267456754">
        <mark key="'" line="240" column="47" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/amr_fragment.py" timestamp="1525240452461">
        <mark key="[" line="224" column="25" />
        <mark key="]" line="224" column="25" />
        <mark key="^" line="224" column="25" />
        <mark key="." line="224" column="25" />
      </file>
      <file name="$USER_HOME$/ConvParser/common/AMRGraph.py" timestamp="1515466512530">
        <mark key="'" line="441" column="22" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/pipeline.sh" timestamp="1525454434348">
        <mark key="'" line="22" column="0" />
      </file>
      <file name="$USER_HOME$/SHRG-extraction/categorize_amr.py" timestamp="1524751297316">
        <mark key="'" line="533" column="6" />
        <mark key="[" line="470" column="0" />
        <mark key="]" line="470" column="0" />
        <mark key="^" line="533" column="5" />
        <mark key="." line="470" column="0" />
      </file>
      <file name="$USER_HOME$/data_processing/date_extraction.py" timestamp="1518505542565">
        <mark key="'" line="9" column="0" />
        <mark key="[" line="7" column="54" />
        <mark key="]" line="7" column="58" />
        <mark key="^" line="7" column="58" />
        <mark key="." line="7" column="58" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/subgraph.py" timestamp="1523480784357">
        <mark key="'" line="342" column="0" />
        <mark key="[" line="376" column="34" />
        <mark key="]" line="376" column="35" />
        <mark key="^" line="270" column="5" />
        <mark key="." line="376" column="35" />
      </file>
      <file name="$USER_HOME$/ConvParser/Aligner.py" timestamp="1515516300723">
        <mark key="'" line="87" column="4" />
      </file>
      <file name="$USER_HOME$/data_processing/ml_utils.py" timestamp="1518561533726">
        <mark key="'" line="26" column="56" />
        <mark key="[" line="26" column="42" />
        <mark key="]" line="26" column="43" />
        <mark key="." line="26" column="43" />
        <mark key="^" line="41" column="23" />
      </file>
      <file name="$USER_HOME$/AMRParser/src/edu/stanford/nlp/parser/nndep/Dataset.java" timestamp="1489555638168">
        <mark key="'" line="34" column="24" />
        <mark key="[" line="30" column="0" />
        <mark key="]" line="30" column="0" />
        <mark key="^" line="34" column="45" />
        <mark key="." line="30" column="0" />
      </file>
      <file name="$USER_HOME$/data_processing/rebuild_conceptid.py" timestamp="1515444326904">
        <mark key="'" line="824" column="4" />
      </file>
      <file name="$USER_HOME$/Cache-Seq2seq/NP2P_evaluater.py" timestamp="1525452092407">
        <mark key="'" line="416" column="19" />
      </file>
      <file name="$USER_HOME$/github_projects/seq2graph/smatch_2.0.2/smatch.py" timestamp="1478007501087">
        <mark key="'" line="806" column="38" />
        <mark key="[" line="813" column="43" />
        <mark key="]" line="813" column="49" />
        <mark key="." line="813" column="49" />
        <mark key="^" line="813" column="49" />
      </file>
      <file name="$USER_HOME$/AMRParser/src/edu/stanford/nlp/parser/nndep/Config.java" timestamp="1492169372407">
        <mark key="'" line="297" column="4" />
        <mark key="[" line="127" column="40" />
        <mark key="]" line="127" column="41" />
        <mark key="." line="127" column="41" />
        <mark key="^" line="151" column="27" />
      </file>
      <file name="$USER_HOME$/data_processing/entities.py" timestamp="1517377419693">
        <mark key="'" line="68" column="33" />
        <mark key="[" line="68" column="32" />
        <mark key="]" line="68" column="33" />
        <mark key="^" line="68" column="33" />
        <mark key="." line="68" column="33" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/depTokens.py" timestamp="1525226636098">
        <mark key="'" line="1" column="7" />
        <mark key="[" line="23" column="85" />
        <mark key="]" line="24" column="41" />
        <mark key="^" line="24" column="41" />
        <mark key="." line="24" column="41" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/Aligner/common/AMRGraph.py" timestamp="1525144623852">
        <mark key="'" line="291" column="28" />
        <mark key="[" line="378" column="24" />
        <mark key="]" line="378" column="24" />
        <mark key="." line="378" column="24" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/amr_graph.py" timestamp="1525406144974">
        <mark key="'" line="663" column="51" />
        <mark key="[" line="696" column="45" />
        <mark key="]" line="696" column="63" />
        <mark key="." line="696" column="63" />
        <mark key="^" line="696" column="63" />
      </file>
      <file name="$USER_HOME$/data_processing/oracle/oracle.py" timestamp="1517020969551">
        <mark key="'" line="39" column="19" />
        <mark key="[" line="4" column="5" />
        <mark key="]" line="4" column="5" />
        <mark key="." line="4" column="5" />
        <mark key="^" line="4" column="37" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/postprocessing/constants.py" timestamp="1518282703629">
        <mark key="'" line="89" column="12" />
      </file>
      <file name="$USER_HOME$/AMRParser/daisyluAMR/system/daisylu_main.py" timestamp="1507581974956">
        <mark key="'" line="262" column="8" />
        <mark key="[" line="93" column="12" />
        <mark key="]" line="93" column="12" />
        <mark key="^" line="93" column="12" />
        <mark key="." line="93" column="12" />
      </file>
      <file name="$USER_HOME$/ConvParser/preprocessing.py" timestamp="1515487616905">
        <mark key="'" line="355" column="59" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/amr_graph.py" timestamp="1521653007984">
        <mark key="'" line="474" column="8" />
        <mark key="[" line="228" column="0" />
        <mark key="]" line="228" column="0" />
        <mark key="^" line="229" column="7" />
        <mark key="." line="228" column="0" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/ioutil.py" timestamp="1523937490324">
        <mark key="'" line="26" column="0" />
        <mark key="[" line="58" column="11" />
        <mark key="]" line="58" column="20" />
        <mark key="^" line="58" column="20" />
        <mark key="." line="58" column="20" />
      </file>
      <file name="$USER_HOME$/github_projects/seq2graph/amr2seq/data_prep/fragment_forest.py" timestamp="1500614719336">
        <mark key="'" line="650" column="51" />
        <mark key="[" line="714" column="8" />
        <mark key="]" line="714" column="8" />
        <mark key="^" line="714" column="8" />
        <mark key="." line="714" column="8" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/HRGRule.py" timestamp="1517105608660">
        <mark key="'" line="2" column="6" />
      </file>
      <file name="$USER_HOME$/AMRParser/CacheTransition/cacheTransition.py" timestamp="1515008518064">
        <mark key="'" line="105" column="21" />
        <mark key="[" line="80" column="36" />
        <mark key="]" line="80" column="37" />
        <mark key="^" line="80" column="33" />
        <mark key="." line="80" column="37" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/lemmatize_snts.py" timestamp="1525226585727">
        <mark key="'" line="6" column="0" />
        <mark key="[" line="44" column="11" />
        <mark key="]" line="45" column="17" />
        <mark key="^" line="45" column="17" />
        <mark key="." line="45" column="17" />
      </file>
      <file name="$USER_HOME$/java_workspace/StanfordParser/src/edu/stanford/nlp/parser/nndep/DependencyParser.java" timestamp="1481283180076">
        <mark key="'" line="653" column="9" />
        <mark key="[" line="781" column="4" />
        <mark key="]" line="781" column="4" />
        <mark key="." line="781" column="4" />
        <mark key="^" line="651" column="48" />
      </file>
      <file name="$USER_HOME$/data_processing/oracle/dependency.py" timestamp="1516771825178">
        <mark key="'" line="64" column="28" />
        <mark key="[" line="120" column="0" />
        <mark key="]" line="120" column="0" />
        <mark key="^" line="78" column="24" />
        <mark key="." line="120" column="0" />
      </file>
      <file name="$USER_HOME$/AMRParser/src/edu/stanford/nlp/parser/nndep/Configuration.java" timestamp="1485121799084">
        <mark key="'" line="80" column="16" />
        <mark key="[" line="102" column="2" />
        <mark key="]" line="102" column="2" />
        <mark key="^" line="100" column="55" />
        <mark key="." line="102" column="2" />
      </file>
      <file name="$USER_HOME$/data_processing/oracle/ioutil.py" timestamp="1517074340787">
        <mark key="'" line="278" column="4" />
        <mark key="[" line="241" column="65" />
        <mark key="]" line="241" column="65" />
        <mark key="." line="241" column="65" />
        <mark key="^" line="241" column="80" />
      </file>
      <file name="$USER_HOME$/Cache-Seq2seq/oracle/AMRGraph.py" timestamp="1525403562075">
        <mark key="[" line="50" column="40" />
        <mark key="]" line="51" column="39" />
        <mark key="^" line="51" column="39" />
        <mark key="." line="51" column="39" />
      </file>
      <file name="$USER_HOME$/java_workspace/StanfordParser/notes" timestamp="1481283244408">
        <mark key="'" line="11" column="0" />
        <mark key="[" line="60" column="9" />
        <mark key="]" line="61" column="0" />
        <mark key="^" line="61" column="0" />
        <mark key="." line="61" column="0" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/hard_attn/NP2P_data_stream.py" timestamp="1525217070721">
        <mark key="'" line="17" column="54" />
      </file>
      <file name="$USER_HOME$/AMRParser/src/edu/stanford/nlp/parser/nndep/Util.java" timestamp="1510360116258">
        <mark key="'" line="206" column="23" />
        <mark key="[" line="312" column="10" />
        <mark key="]" line="312" column="11" />
        <mark key="^" line="312" column="11" />
        <mark key="." line="312" column="11" />
      </file>
      <file name="$USER_HOME$/AMRParser/src/edu/stanford/nlp/parser/nndep/AMRConfiguration.java" timestamp="1516732599571">
        <mark key="'" line="616" column="23" />
        <mark key="[" line="619" column="0" />
        <mark key="]" line="619" column="0" />
        <mark key="." line="619" column="0" />
        <mark key="^" line="618" column="19" />
      </file>
      <file name="$USER_HOME$/AMRParser/src/edu/stanford/nlp/parser/nndep/ArcStandard.java" timestamp="1483373416837">
        <mark key="'" line="91" column="8" />
        <mark key="[" line="18" column="9" />
        <mark key="]" line="18" column="23" />
        <mark key="." line="18" column="23" />
        <mark key="^" line="18" column="23" />
      </file>
      <file name="$USER_HOME$/data_processing/oracle/AMRGraph.py" timestamp="1516843951219">
        <mark key="'" line="78" column="40" />
        <mark key="[" line="38" column="63" />
        <mark key="]" line="38" column="63" />
        <mark key="." line="38" column="63" />
        <mark key="^" line="38" column="63" />
      </file>
      <file name="$USER_HOME$/SHRG-induction/categorize_amr.py" timestamp="1521648451226">
        <mark key="'" line="504" column="63" />
        <mark key="[" line="525" column="0" />
        <mark key="]" line="525" column="0" />
        <mark key="^" line="517" column="33" />
        <mark key="." line="525" column="0" />
      </file>
      <file name="$USER_HOME$/data_processing/conceptid.py" timestamp="1518559789665">
        <mark key="'" line="41" column="43" />
        <mark key="[" line="54" column="12" />
        <mark key="]" line="54" column="12" />
        <mark key="^" line="54" column="12" />
        <mark key="." line="54" column="12" />
      </file>
      <file name="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/utils.py" timestamp="1525500044383">
        <mark key="[" line="76" column="0" />
        <mark key="]" line="76" column="0" />
        <mark key="." line="76" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="145" column="50" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/oracle.py" />
      <jump line="258" column="40" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/cacheConfiguration.py" />
      <jump line="183" column="8" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/cacheConfiguration.py" />
      <jump line="245" column="40" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/cacheConfiguration.py" />
      <jump line="240" column="4" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/cacheConfiguration.py" />
      <jump line="119" column="34" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/oracle.py" />
      <jump line="300" column="32" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/cacheConfiguration.py" />
      <jump line="110" column="66" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/oracle.py" />
      <jump line="250" column="4" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/cacheTransition.py" />
      <jump line="42" column="23" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/oracle.py" />
      <jump line="417" column="26" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/oracle/ioutil.py" />
      <jump line="210" column="46" filename="$USER_HOME$/Cache-Seq2seq/oracle/oracle.py" />
      <jump line="245" column="34" filename="$USER_HOME$/Cache-Seq2seq/oracle/cacheConfiguration.py" />
      <jump line="226" column="24" filename="$USER_HOME$/Cache-Seq2seq/oracle/cacheConfiguration.py" />
      <jump line="415" column="4" filename="$USER_HOME$/Cache-Seq2seq/oracle/cacheConfiguration.py" />
      <jump line="286" column="46" filename="$USER_HOME$/Cache-Seq2seq/oracle/cacheConfiguration.py" />
      <jump line="208" column="8" filename="$USER_HOME$/Cache-Seq2seq/oracle/cacheConfiguration.py" />
      <jump line="276" column="35" filename="$USER_HOME$/Cache-Seq2seq/oracle/cacheConfiguration.py" />
      <jump line="167" column="8" filename="$USER_HOME$/Cache-Seq2seq/oracle/cacheConfiguration.py" />
      <jump line="148" column="51" filename="$USER_HOME$/Cache-Seq2seq/oracle/oracle.py" />
      <jump line="255" column="39" filename="$USER_HOME$/Cache-Seq2seq/oracle/cacheConfiguration.py" />
      <jump line="261" column="8" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="449" column="51" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="696" column="56" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/amr_graph.py" />
      <jump line="699" column="20" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/amr_graph.py" />
      <jump line="644" column="8" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/amr_graph.py" />
      <jump line="650" column="32" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/amr_graph.py" />
      <jump line="651" column="32" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/amr_graph.py" />
      <jump line="665" column="51" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/amr_graph.py" />
      <jump line="624" column="12" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/amr_graph.py" />
      <jump line="801" column="16" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="810" column="15" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="813" column="4" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="855" column="11" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="609" column="4" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="634" column="12" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="642" column="4" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="644" column="27" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="788" column="8" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="766" column="0" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="13" column="4" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="451" column="8" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="481" column="38" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="94" column="34" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="142" column="67" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="140" column="20" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="103" column="41" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="30" column="19" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="442" column="82" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="459" column="90" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="1124" column="65" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="527" column="8" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="24" column="13" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="20" column="4" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/utils.py" />
      <jump line="17" column="0" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/utils.py" />
      <jump line="44" column="21" filename="$USER_HOME$/Cache-Seq2seq/NP2P_evaluater.py" />
      <jump line="409" column="27" filename="$USER_HOME$/Cache-Seq2seq/NP2P_evaluater.py" />
      <jump line="416" column="19" filename="$USER_HOME$/Cache-Seq2seq/NP2P_evaluater.py" />
      <jump line="141" column="41" filename="$USER_HOME$/Cache-Seq2seq/NP2P_data_stream.py" />
      <jump line="284" column="0" filename="$USER_HOME$/Cache-Seq2seq/NP2P_data_stream.py" />
      <jump line="129" column="12" filename="$USER_HOME$/Cache-Seq2seq/NP2P_data_stream.py" />
      <jump line="444" column="4" filename="$USER_HOME$/Cache-Seq2seq/NP2P_beam_decoder.py" />
      <jump line="307" column="40" filename="$USER_HOME$/Cache-Seq2seq/NP2P_beam_decoder.py" />
      <jump line="22" column="0" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/pipeline.sh" />
      <jump line="432" column="19" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="1162" column="22" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="1232" column="8" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="1169" column="43" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="1170" column="99" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="1165" column="31" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="284" column="42" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="1213" column="73" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="1224" column="21" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="1225" column="8" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="33" column="4" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/utils.py" />
      <jump line="285" column="39" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="43" column="11" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/utils.py" />
      <jump line="24" column="4" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/utils.py" />
      <jump line="422" column="17" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="6" column="3" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/utils.py" />
      <jump line="55" column="12" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/utils.py" />
      <jump line="56" column="12" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/utils.py" />
      <jump line="57" column="60" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/utils.py" />
      <jump line="530" column="12" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="543" column="29" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="528" column="41" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="420" column="8" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="436" column="28" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="494" column="0" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="520" column="34" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="515" column="24" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="495" column="58" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="489" column="34" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="816" column="4" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="820" column="23" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="771" column="28" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="772" column="30" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="821" column="28" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/alignment_utils.py" />
      <jump line="810" column="4" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
      <jump line="1752" column="8" filename="$USER_HOME$/neural-decoder/cache-transition-seq2seq/data_processing/prepareTokens.py" />
    </jumps>
    <registers>
      <register name="&quot;" type="4">
        <text>v</text>
      </register>
      <register name="-" type="4">
        <text>v</text>
      </register>
      <register name="/" type="4">
        <text>node_to_span</text>
      </register>
      <register name="0" type="4">
        <text encoding="base64">ZGVmIGlkZW50aWZ5TnVtYmVyKHNlcSwgbWxlX21hcCk6CiAgICAgICAgcXVhbnRpdGllcyA9IHNldChbJ29uZScsICd0d28nLCAndGhyZWUnLCAnZm91cicsICdmaXZlJywgJ3NpeCcsICdzZXZlbicsICdlaWdodCcsICduaW5lJywgJ3RlbicsICdiaWxsaW9uJywKICAgICAgICAgICAgICAgICAgICAgICAgICAndGVudGgnLCAnbWlsbGlvbicsICd0aG91c2FuZCcsICdodW5kcmVkJywgJ3ZpaWknLCAnZWxldmVuJywgJ3R3ZWx2ZScsICd0aGlydGVlbicsICdpdiddKQogICAgICAgIGZvciB0b2sgaW4gc2VxOgogICAgICAgICAgICBpZiB0b2sgaW4gbWxlX21hcCBhbmQgbWxlX21hcFt0b2tdWzBdICE9ICdOVU1CRVInOgogICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgIGVsaWYgbm90IChpc051bWJlcih0b2spIG9yIHRvayBpbiBxdWFudGl0aWVzKToKICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgIHJldHVybiBUcnVlCgogICAgZGVmIHJlcGxhY2VTeW1ib2wocyk6CiAgICAgICAgcmV0dXJuIHMucmVwbGFjZSgiQCAtIEAiLCAiQC1AIikucmVwbGFjZSgiQCA6QCIsICJAOkAiKS5yZXBsYWNlKCJAIC8gQCIsICJAL0AiKQoKICAgIGRlZiBhbGxVbmFsaWduZWQoc2VxLCBtbGVMZW1tYU1hcCk6CiAgICAgICAgZm9yIHRvayBpbiBzZXE6CiAgICAgICAgICAgIGlmIG5vdCB0b2sgaW4gbWxlTGVtbWFNYXA6CiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICAgICAgYWxpZ25lZF9jID0gbWxlTGVtbWFNYXBbdG9rXVswXQogICAgICAgICAgICBpZiBub3QgKGFsaWduZWRfYy5sb3dlcigpID09ICJub25lIik6CiAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICByZXR1cm4gVHJ1ZQoKICAgIG9zLnN5c3RlbSgibWtkaXIgLXAgJXMiICUgb3V0cHV0X2RpcikKCiAgICBjb25jZXB0SURQYXRoID0gb3MucGF0aC5qb2luKGZyZXFfcGF0aCwgInRva1RvQ29uY2VwdHMudHh0IikKICAgIGxlbW1hVG9Db25jZXB0UGF0aCA9IG9zLnBhdGguam9pbihmcmVxX3BhdGgsICJsZW1Ub0NvbmNlcHRzLnR4dCIpCiAgICBwaHJhc2VQYXRoID0gb3MucGF0aC5qb2luKGZyZXFfcGF0aCwgInBocmFzZXMiKQogICAgdmVyYmFsaXphdGlvbl9wYXRoID0gb3MucGF0aC5qb2luKGFyZ3MucmVzb3VyY2VfZGlyLCAidmVyYmFsaXphdGlvbi1saXN0LXYxLjAxLnR4dCIpCiAgICBWRVJCX0xJU1QgPSBsb2FkX3ZlcmJfbGlzdCh2ZXJiYWxpemF0aW9uX3BhdGgpCgogICAgbWxlX21hcCA9IGxvYWRNTEVGaWxlKGNvbmNlcHRJRFBhdGgpCiAgICBtbGVMZW1tYU1hcCA9IGxvYWRNTEVGaWxlKGxlbW1hVG9Db25jZXB0UGF0aCkKICAgICMgcGhyYXNlX21hcCA9IGxvYWRQaHJhc2VzKHBocmFzZVBhdGgpCgogICAgdG9rX2ZpbGUgPSBvcy5wYXRoLmpvaW4oZGF0YV9kaXIsICd0b2tlbicpCiAgICBsZW1fZmlsZSA9IG9zLnBhdGguam9pbihkYXRhX2RpciwgJ2xlbW1hJykKICAgIHBvc19maWxlID0gb3MucGF0aC5qb2luKGRhdGFfZGlyLCAncG9zJykKICAgIG5lcl9maWxlID0gb3MucGF0aC5qb2luKGRhdGFfZGlyLCAnbmVyJykKICAgIGRhdGVfZmlsZSA9IG9zLnBhdGguam9pbihkYXRhX2RpciwgJ2RhdGUnKQoKICAgIGZyZXF1ZW50X3NldCA9IGxvYWRGcmVxdWVudFNldChhcmdzLmZyZXFfZGlyKQoKICAgIHRva3MsIGxlbXMsIHBvc3MgPSBsb2FkVG9rZW5zKHRva19maWxlKSwgbG9hZFRva2VucyhsZW1fZmlsZSksIGxvYWRUb2tlbnMocG9zX2ZpbGUpCgogICAgaWYgc2F2ZV9tb2RlOgogICAgICAgIGFsbF9lbnRpdGllcywgZW50aXR5X21hcCA9IGlkZW50aWZ5X2VudGl0aWVzKHRva19maWxlLCBuZXJfZmlsZSwgbWxlX21hcCkgI3Rva19maWxlIG9yIGxlbV9maWxlPwogICAgICAgIGFsbF9kYXRlcyA9IGRhdGVNYXAoZGF0ZV9maWxlKQoKICAgICAgICB0b2tlbml6ZWRfZmlsZSA9IG9zLnBhdGguam9pbihkYXRhX2RpciwgInRva2VuaXplZCIpCgogICAgICAgIHRva2VuaXplZF9zZXFzID0gbG9hZFRva2Vucyh0b2tlbml6ZWRfZmlsZSkKCiAgICAgICAgZGF0ZV9vdXRwdXQgPSBvcy5wYXRoLmpvaW4ob3V0cHV0X2RpciwgImRhdGUuc3BhbnMudHh0IikKICAgICAgICBuZXJfb3V0cHV0ID0gb3MucGF0aC5qb2luKG91dHB1dF9kaXIsICJuZXIuc3BhbnMudHh0IikKCiAgICAgICAgYWxsX2RhdGVfc3BhbnMgPSBbXQogICAgICAgIGFsbF9uZXJfc3BhbnMgPSBbXQoKICAgICAgICBhYmJyZXZfdG9fZnVsbG5hbWUgPSB7fQoKICAgICAgICBmb3IgKHNlbnRfaWR4LCBlbnRpdGllc19pbl9zZW50KSBpbiBlbnVtZXJhdGUoYWxsX2VudGl0aWVzKToKCiAgICAgICAgICAgIHRva19zZXEsIGxlbV9zZXEsIHBvc19zZXEgPSB0b2tzW3NlbnRfaWR4XSwgbGVtc1tzZW50X2lkeF0sIHBvc3Nbc2VudF9pZHhdCiAgICAgICAgICAgIHRva2VuaXplZCA9IHRva2VuaXplZF9zZXFzW3NlbnRfaWR4XQogICAgICAgICAgICBkYXRlX3NwYW5zID0gYWxsX2RhdGVzW3NlbnRfaWR4XQoKICAgICAgICAgICAgbl90b2tzID0gbGVuKHRva19zZXEpCgogICAgICAgICAgICBhbGlnbmVkX3NldCA9IHNldCgpCgogICAgICAgICAgICBuZXdfZGF0ZV9zcGFucyA9IFtdCiAgICAgICAgICAgIG5ld19lbnRpdHlfc3BhbnMgPSBbXQoKICAgICAgICAgICAgYWxpZ25lZF9uZXcgPSBzZXQoKQoKICAgICAgICAgICAgc2luZ2xlX2RhdGVzID0ge30KICAgICAgICAgICAgZW50aXR5X3Rva19zZXQgPSBzZXQoKQogICAgICAgICAgICAjQWxpZ24gZGF0ZXMKICAgICAgICAgICAgbmV3X2lkeCA9IDAKICAgICAgICAgICAgZm9yIChzdGFydCwgZW5kKSBpbiBkYXRlX3NwYW5zOgogICAgICAgICAgICAgICAgZGF0ZV9yZXByID0gIiAiLmpvaW4odG9rX3NlcVtzdGFydDplbmRdKQogICAgICAgICAgICAgICAgaWYgZGF0ZV9yZXByIGluIG1sZV9tYXAgYW5kIG1sZV9tYXBbZGF0ZV9yZXByXVswXSAhPSAiREFURSI6CiAgICAgICAgICAgICAgICAgICAgY29udGludWUKCiAgICAgICAgICAgICAgICAobmV3X3N0YXJ0LCBuZXdfZW5kKSA9IHNlYXJjaFNlcShkYXRlX3JlcHIucmVwbGFjZSgiICIsICIiKSwgdG9rZW5pemVkLCBuZXdfaWR4KQogICAgICAgICAgICAgICAgaWYgbmV3X3N0YXJ0ID09IC0xOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJTb21ldGhpbmcgd3Jvbmcgd2l0aCBzZW50ZW5jZSAlZCIgJSBzZW50X2lkeAogICAgICAgICAgICAgICAgICAgIHByaW50IGRhdGVfcmVwcgogICAgICAgICAgICAgICAgICAgIHByaW50IHRva2VuaXplZAogICAgICAgICAgICAgICAgICAgIHN5cy5leGl0KDEpCiAgICAgICAgICAgICAgICBpZiBuZXdfZW5kIC0gbmV3X3N0YXJ0ID09IDE6CiAgICAgICAgICAgICAgICAgICAgc2luZ2xlX2RhdGVzW3N0YXJ0XSA9IG5ld19zdGFydAogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBpZiBuZXdfZW5kIDwgbGVuKHRva2VuaXplZCkgYW5kIHRva2VuaXplZFtuZXdfZW5kXSBpbiBkYXRlX3N1ZmZpeGVzOgogICAgICAgICAgICAgICAgICAgICAgICBuZXdfZW5kICs9IDEKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgIm5ld2x5IGdlbmVyYXRlZDoiLCAiXyIuam9pbih0b2tlbml6ZWRbbmV3X3N0YXJ0Om5ld19lbmRdKQogICAgICAgICAgICAgICAgICAgIG5ld19kYXRlX3NwYW5zLmFwcGVuZCgiJWQtJWQjIyMjJXMiICUgKG5ld19zdGFydCwgbmV3X2VuZCwgIl8iLmpvaW4odG9rZW5pemVkW25ld19zdGFydDpuZXdfZW5kXSkpKQogICAgICAgICAgICAgICAgICAgIHByaW50ICJEYXRlOiIsICIgIi5qb2luKHRva2VuaXplZFtuZXdfc3RhcnQ6bmV3X2VuZF0pCiAgICAgICAgICAgICAgICAgICAgbmV3X2lkeCA9IG5ld19lbmQKCiAgICAgICAgICAgICAgICAgICAgYWxpZ25lZF9zZXQgfD0gc2V0KHJhbmdlKHN0YXJ0LCBlbmQpKQogICAgICAgICAgICAgICAgICAgIGFsaWduZWRfbmV3IHw9IHNldChyYW5nZShuZXdfc3RhcnQsIG5ld19lbmQpKQoKICAgICAgICAgICAgI0ZpcnN0IGFsaWduIG11bHRpIHRva2VucwogICAgICAgICAgICBuZXdfaWR4ID0gMAogICAgICAgICAgICBhbGlnbmVkX3JlcHIgPSBzZXQoKQoKICAgICAgICAgICAgbGFzdHRva190b19yZXByID0ge30KICAgICAgICAgICAgZm9yIChzdGFydCwgZW5kLCBlbnRpdHlfdHlwKSBpbiBlbnRpdGllc19pbl9zZW50OgogICAgICAgICAgICAgICAgIyBwcmludCAnZW50aXR5OicsICcgJy5qb2luKHRva19zZXFbc3RhcnQ6ZW5kXSksIGVudGl0eV90eXAKICAgICAgICAgICAgICAgIG5ld19hbGlnbmVkID0gc2V0KHhyYW5nZShzdGFydCwgZW5kKSkKICAgICAgICAgICAgICAgIGlmIGxlbihhbGlnbmVkX3NldCAmIG5ld19hbGlnbmVkKSAhPSAwOgogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICBhYmJyZXYgPSBGYWxzZQogICAgICAgICAgICAgICAgcmV0X2VudCA9IEZhbHNlCiAgICAgICAgICAgICAgICBhbGlnbmVkX3NldCB8PSBuZXdfYWxpZ25lZAogICAgICAgICAgICAgICAgZW50aXR5X25hbWUgPSAnICcuam9pbih0b2tfc2VxW3N0YXJ0OmVuZF0pCiAgICAgICAgICAgICAgICBpZiByZXBsYWNlU3ltYm9sKGVudGl0eV9uYW1lKSBpbiBtbGVfbWFwOgogICAgICAgICAgICAgICAgICAgIG5ld19uYW1lID0gcmVwbGFjZVN5bWJvbChlbnRpdHlfbmFtZSkKICAgICAgICAgICAgICAgICAgICBpZiBuZXdfbmFtZSAhPSBlbnRpdHlfbmFtZToKICAgICAgICAgICAgICAgICAgICAgICAgZW50aXR5X25hbWUgPSBuZXdfbmFtZQogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiUmVwbGFjZWQ6IiwgZW50aXR5X25hbWUKCiAgICAgICAgICAgICAgICBpZiBlbnRpdHlfbmFtZSBpbiBtbGVfbWFwOgogICAgICAgICAgICAgICAgICAgIGVudGl0eV90eXAgPSBtbGVfbWFwW2VudGl0eV9uYW1lXQoKICAgICAgICAgICAgICAgICAgICBpZiBub3QgIk5FXyIgaW4gZW50aXR5X3R5cFswXSBhbmQgZW50aXR5X25hbWUubG93ZXIoKSBpbiBtbGVfbWFwOgogICAgICAgICAgICAgICAgICAgICAgICBlbnRpdHlfdHlwID0gbWxlX21hcFtlbnRpdHlfbmFtZS5sb3dlcigpXQogICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgIk5FXyIgaW4gZW50aXR5X3R5cFswXToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50ICJSZW1vdmVkIGRpc2NvdmVyZWQgZW50aXR5OiIsIGVudGl0eV9uYW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIGVsaWYgZW50aXR5X3R5cFswXSA9PSAiTk9ORSI6CiAgICAgICAgICAgICAgICAgICAgICAgIGVudGl0eV90eXAgPSAoIk5FIiwgIi0iKQogICAgICAgICAgICAgICAgICAgIGlmIGVudGl0eV90eXAgaW4gYWxpZ25lZF9yZXByOgogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiUmVtb3ZlZCBkdXBsaWNhdGUgZW50aXR5IiwgZW50aXR5X25hbWUKICAgICAgICAgICAgICAgICAgICAgICAgZW50aXR5X3R5cCA9ICgiUkVFTlQiLCAiLSIpCiAgICAgICAgICAgICAgICAgICAgICAgIHJldF9lbnQgPSBUcnVlCiAgICAgICAgICAgICAgICAgICAgYWxpZ25lZF9yZXByLmFkZChlbnRpdHlfdHlwKQoKICAgICAgICAgICAgICAgIGVsaWYgc3RhcnQgPT0gMCBhbmQgZW50aXR5X25hbWUubG93ZXIoKSBpbiBtbGVfbWFwOgogICAgICAgICAgICAgICAgICAgIGVudGl0eV90eXAgPSBtbGVfbWFwW2VudGl0eV9uYW1lLmxvd2VyKCldCiAgICAgICAgICAgICAgICAgICAgaWYgbm90ICJORV8iIGluIGVudGl0eV90eXBbMF06CiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50ICJSZW1vdmVkIGRpc2NvdmVyZWQgZW50aXR5OiIsIGVudGl0eV9uYW1lCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgYWxpZ25lZF9yZXByLmFkZChlbnRpdHlfdHlwKQoKICAgICAgICAgICAgICAgIGVsaWYgZW50aXR5X3R5cCA9PSAiUEVSIjoKICAgICAgICAgICAgICAgICAgICBlbnRpdHlfdHlwID0gKCdORV9wZXJzb24nLCAnLScpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIGVudGl0eV90eXAgPSAoJ05FJywgJy0nKQoKICAgICAgICAgICAgICAgIGVudGl0eV9yZXByID0gIiAiLmpvaW4odG9rX3NlcVtzdGFydDogZW5kXSkKICAgICAgICAgICAgICAgIGlmIGluX2JyYWNrZXQoc3RhcnQsIGVuZCwgdG9rX3NlcSkgYW5kIChzdGFydCAtIDIpIGluIGVudGl0eV90b2tfc2V0OgogICAgICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICAgICAgYXNzZXJ0IHN0YXJ0IC0gMiBpbiBsYXN0dG9rX3RvX3JlcHIKICAgICAgICAgICAgICAgICAgICAgICAgYWJicmV2X3RvX2Z1bGxuYW1lW2VudGl0eV9yZXByXSA9IGxhc3R0b2tfdG9fcmVwcltzdGFydC0yXQogICAgICAgICAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgInNlbnRlbmNlIGluZGV4Iiwgc2VudF9pZHgKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgZW50aXRpZXNfaW5fc2VudAogICAgICAgICAgICAgICAgICAgICAgICBwcmludCBsYXN0dG9rX3RvX3JlcHIKICAgICAgICAgICAgICAgICAgICAgICAgc3lzLmV4aXQoMSkKICAgICAgICAgICAgICAgICAgICBwcmludCAiUHJ1bmVkIGFiYnJldmlhdGlvbjogJXMiICUgKCIgIi5qb2luKHRva19zZXFbc3RhcnQ6ZW5kXSkpCiAgICAgICAgICAgICAgICAgICAgZW50aXR5X3R5cCA9ICgiQUJCUkVWIiwgIi0iKQogICAgICAgICAgICAgICAgICAgIGFiYnJldiA9IFRydWUKICAgICAgICAgICAgICAgIGVudGl0eV90b2tfc2V0IHw9IHNldChyYW5nZShzdGFydCwgZW5kKSkKICAgICAgICAgICAgICAgIChuZXdfc3RhcnQsIG5ld19lbmQpID0gc2VhcmNoU2VxKGVudGl0eV9yZXByLnJlcGxhY2UoIiAiLCAiIiksIHRva2VuaXplZCwgbmV3X2lkeCwgYWxpZ25lZF9uZXcpCiAgICAgICAgICAgICAgICBpZiBuZXdfc3RhcnQgPT0gLTE6CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIkhlcmUiLCBuZXdfaWR4CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNvbWV0aGluZyB3cm9uZyB3aXRoIHNlbnRlbmNlICVkIiAlIHNlbnRfaWR4CiAgICAgICAgICAgICAgICAgICAgcHJpbnQgZW50aXR5X3JlcHIKICAgICAgICAgICAgICAgICAgICBwcmludCB0b2tlbml6ZWQKICAgICAgICAgICAgICAgICAgICBzeXMuZXhpdCgxKQogICAgICAgICAgICAgICAgbWFwX3JlcHIgPSAiJXMjIyVzIiAlIChlbnRpdHlfdHlwWzBdLCBlbnRpdHlfdHlwWzFdKQogICAgICAgICAgICAgICAgIyBwcmludCBuZXdfc3RhcnQsIG5ld19lbmQsIG1hcF9yZXByCiAgICAgICAgICAgICAgICBsYXN0dG9rX3RvX3JlcHJbZW5kLTFdID0gbWFwX3JlcHIKCiAgICAgICAgICAgICAgICBuZXdfZW50aXR5X3NwYW5zLmFwcGVuZCgiJWQtJWQjIyMjJXMiICUgKG5ld19zdGFydCwgbmV3X2VuZCwgbWFwX3JlcHIpKQogICAgICAgICAgICAgICAgcHJpbnQgIk5FUjoiLCAiICIuam9pbih0b2tlbml6ZWRbbmV3X3N0YXJ0Om5ld19lbmRdKQogICAgICAgICAgICAgICAgIyBwcmludCBhbGlnbmVkX3JlcHIKICAgICAgICAgICAgICAgIGN1cnJfYWxpZ25lZCA9IHNldChyYW5nZShuZXdfc3RhcnQsIG5ld19lbmQpKQogICAgICAgICAgICAgICAgYXNzZXJ0IGxlbihhbGlnbmVkX25ldyAmIGN1cnJfYWxpZ25lZCkgPT0gMAogICAgICAgICAgICAgICAgYWxpZ25lZF9uZXcgfD0gY3Vycl9hbGlnbmVkCiAgICAgICAgICAgICAgICBuZXdfaWR4ID0gbmV3X2VuZAoKICAgICAgICAgICAgICAgIGFsaWduZWRfc2V0IHw9IHNldChyYW5nZShzdGFydCwgZW5kKSkKCiAgICAgICAgICAgICMjQWxpZ24gdGhlIGZpcnN0IHRva2VuLCBAc29tZW9uZQogICAgICAgICAgICBpZiAwIG5vdCBpbiBhbGlnbmVkX3NldDoKICAgICAgICAgICAgICAgIGZpcnN0X3RvayA9IHRva19zZXFbMF0KICAgICAgICAgICAgICAgIGlmIGxlbihmaXJzdF90b2spID4gMiBhbmQgZmlyc3RfdG9rWzBdID09ICdAJzoKICAgICAgICAgICAgICAgICAgICBlbnRpdHlfdHlwID0gKCdORV9wZXJzb24nLCAnLScpCiAgICAgICAgICAgICAgICAgICAgYWxpZ25lZF9zZXQuYWRkKDApCiAgICAgICAgICAgICAgICAgICAgKG5ld19zdGFydCwgbmV3X2VuZCkgPSBzZWFyY2hTZXEoZmlyc3RfdG9rLCB0b2tlbml6ZWQsIG5ld19pZHgpCiAgICAgICAgICAgICAgICAgICAgaWYgbmV3X3N0YXJ0ID09IC0xOgogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiU29tZXRoaW5nIHdyb25nIHdpdGggc2VudGVuY2UgJWQiICUgc2VudF9pZHgKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgZW50aXR5X3JlcHIKICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgdG9rZW5pemVkCiAgICAgICAgICAgICAgICAgICAgICAgIHN5cy5leGl0KDEpCiAgICAgICAgICAgICAgICAgICAgbmV3X2VudGl0eV9zcGFucy5hcHBlbmQoIiVkLSVkIyMjIyVzIyMlcyIgJSAobmV3X3N0YXJ0LCBuZXdfZW5kLCBlbnRpdHlfdHlwWzBdLCBlbnRpdHlfdHlwWzFdKSkKICAgICAgICAgICAgICAgICAgICBwcmludCAiTkVSOiIsICIgIi5qb2luKHRva2VuaXplZFtuZXdfc3RhcnQ6bmV3X2VuZF0pCgogICAgICAgICAgICAgICAgICAgIGFsaWduZWRfbmV3IHw9IHNldChyYW5nZShuZXdfc3RhcnQsIG5ld19lbmQpKQoKICAgICAgICAgICAgbmV3X2lkeCA9IDAKICAgICAgICAgICAgZm9yIHN0YXJ0IGluIHJhbmdlKG5fdG9rcyk6CiAgICAgICAgICAgICAgICBpZiBzdGFydCBpbiBhbGlnbmVkX3NldDoKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgZm9yIGVuZCBpbiByYW5nZShzdGFydCs3LCBzdGFydCsxLCAtMSk6CiAgICAgICAgICAgICAgICAgICAgaWYgZW5kID4gbl90b2tzIG9yIGVuZCBpbiBhbGlnbmVkX3NldDoKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKCiAgICAgICAgICAgICAgICAgICAgZW50aXR5X3JlcHIgPSAiICIuam9pbih0b2tfc2VxW3N0YXJ0OmVuZF0pCiAgICAgICAgICAgICAgICAgICAgaWYgaW5fYnJhY2tldChzdGFydCwgZW5kLCB0b2tfc2VxKSBhbmQgKHN0YXJ0LTIpIGluIGVudGl0eV90b2tfc2V0OgogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgIGlmIGVudGl0eV9yZXByIGluIG1sZV9tYXAgYW5kIG1sZV9tYXBbZW50aXR5X3JlcHJdWzBdID09ICJOT05FIjoKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICBpZiBlbnRpdHlfcmVwciBpbiBlbnRpdHlfbWFwIG9yIChlbnRpdHlfcmVwciBpbiBtbGVfbWFwIGFuZCAiTkVfIiBpbiBtbGVfbWFwW2VudGl0eV9yZXByXVswXSk6CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIHJlcGxhY2VTeW1ib2woZW50aXR5X3JlcHIpIGluIG1sZV9tYXA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdfbmFtZSA9IHJlcGxhY2VTeW1ib2woZW50aXR5X3JlcHIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBuZXdfbmFtZSAhPSBlbnRpdHlfcmVwcjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnRpdHlfcmVwciA9IG5ld19uYW1lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlJlcGxhY2VkOiIsIGVudGl0eV9yZXByCgogICAgICAgICAgICAgICAgICAgICAgICBpZiBlbnRpdHlfcmVwciBpbiBtbGVfbWFwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZW50aXR5X3R5cCA9IG1sZV9tYXBbZW50aXR5X3JlcHJdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBlbnRpdHlfdHlwIGluIGFsaWduZWRfcmVwcjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiUmVtb3ZlZCBkdXBsaWNhdGUgZW50aXR5IiwgZW50aXR5X25hbWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnRpdHlfdHlwID0gKCJSRUVOVCIsICItIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduZWRfcmVwci5hZGQoZW50aXR5X3R5cCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIG5vdCAiTkVfIiBpbiBlbnRpdHlfdHlwWzBdIGFuZCBlbnRpdHlfcmVwci5sb3dlcigpIGluIG1sZV9tYXA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW50aXR5X3R5cCA9IG1sZV9tYXBbZW50aXR5X3JlcHIubG93ZXIoKV0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAiTkVfIiBub3QgaW4gZW50aXR5X3R5cFswXToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlJlbW92ZWQgZGlzY292ZXJlZCBlbnRpdHk6IiwgZW50aXR5X3JlcHIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsaWYgZW50aXR5X3R5cFswXSA9PSAiTk9ORSI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlVuYWxpZ25lZCB0b2tlbjoiLCBlbnRpdHlfcmVwcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCgogICAgICAgICAgICAgICAgICAgICAgICBlbGlmIHN0YXJ0ID09IDAgYW5kIGVudGl0eV9yZXByLmxvd2VyKCkgaW4gbWxlX21hcDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVudGl0eV90eXAgPSBtbGVfbWFwW2VudGl0eV9yZXByLmxvd2VyKCldCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhc3NlcnQgZW50aXR5X3R5cCBub3QgaW4gYWxpZ25lZF9yZXByCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiBub3QgIk5FXyIgaW4gZW50aXR5X3R5cFswXToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCAiUmVtb3ZlZCBkaXNjb3ZlcmVkIGVudGl0eToiLCBlbnRpdHlfbmFtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhc3NlcnQgZW50aXR5X3JlcHIgaW4gZW50aXR5X21hcAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZW50aXR5X25hbWUgPSBlbnRpdHlfbWFwW2VudGl0eV9yZXByXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgZW50aXR5X25hbWUgPT0gIlBFUiI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW50aXR5X3R5cCA9ICgnTkVfcGVyc29uJywgJy0nKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbnRpdHlfbmFtZSA9ICgnTkUnLCAnLScpCgogICAgICAgICAgICAgICAgICAgICAgICBlbnRpdHlfcmVwciA9ICIgIi5qb2luKHRva19zZXFbc3RhcnQ6IGVuZF0pCiAgICAgICAgICAgICAgICAgICAgICAgIChuZXdfc3RhcnQsIG5ld19lbmQpID0gc2VhcmNoU2VxKGVudGl0eV9yZXByLnJlcGxhY2UoIiAiLCAiIiksIHRva2VuaXplZCwgbmV3X2lkeCwgYWxpZ25lZF9uZXcpCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIG5ld19zdGFydCA9PSAtMToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50ICJIZXJlIiwgbmV3X2lkeAogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNvbWV0aGluZyB3cm9uZyB3aXRoIHNlbnRlbmNlICVkIiAlIHNlbnRfaWR4CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCBlbnRpdHlfcmVwcgogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgdG9rZW5pemVkCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzeXMuZXhpdCgxKQogICAgICAgICAgICAgICAgICAgICAgICBuZXdfZW50aXR5X3NwYW5zLmFwcGVuZCgiJWQtJWQjIyMjJXMjIyVzIiAlIChuZXdfc3RhcnQsIG5ld19lbmQsIGVudGl0eV90eXBbMF0sIGVudGl0eV90eXBbMV0pKQogICAgICAgICAgICAgICAgICAgICAgICAjIHByaW50ICJORVI6IiwgIiAiLmpvaW4odG9rZW5pemVkW25ld19zdGFydDpuZXdfZW5kXSkKICAgICAgICAgICAgICAgICAgICAgICAgY3Vycl9hbGlnbmVkID0gc2V0KHJhbmdlKG5ld19zdGFydCwgbmV3X2VuZCkpCiAgICAgICAgICAgICAgICAgICAgICAgIGFzc2VydCBsZW4oYWxpZ25lZF9uZXcgJiBjdXJyX2FsaWduZWQpID09IDAKICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ25lZF9uZXcgfD0gY3Vycl9hbGlnbmVkCiAgICAgICAgICAgICAgICAgICAgICAgIG5ld19pZHggPSBuZXdfZW5kCgogICAgICAgICAgICAgICAgICAgICAgICBhbGlnbmVkX3NldCB8PSBzZXQocmFuZ2Uoc3RhcnQsIGVuZCkpCgogICAgICAgICAgICBmb3IgaWR4IGluIHNpbmdsZV9kYXRlczoKICAgICAgICAgICAgICAgIG5ld19pZHggPSBzaW5nbGVfZGF0ZXNbaWR4XQogICAgICAgICAgICAgICAgaWYgaWR4IG5vdCBpbiBhbGlnbmVkX3NldDoKICAgICAgICAgICAgICAgICAgICBhc3NlcnQgbmV3X2lkeCBub3QgaW4gYWxpZ25lZF9uZXcKICAgICAgICAgICAgICAgICAgICBuZXdfZGF0ZV9zcGFucy5hcHBlbmQoIiVkLSVkIyMjIyVzIiAlIChuZXdfaWR4LCBuZXdfaWR4KzEsIHRva2VuaXplZFtuZXdfaWR4XSkpCiAgICAgICAgICAgICAgICAgICAgcHJpbnQgIlNpbmdsZSBkYXRlczogJXMiICUgdG9rZW5pemVkW25ld19pZHhdCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIHByaW50ICJGaWx0ZXJlZCBkYXRlczogJXMsICVzIiAlICh0b2tlbml6ZWRbbmV3X2lkeF0sIHRva2VuaXplZCkKCiAgICAgICAgICAgIGFsbF9kYXRlX3NwYW5zLmFwcGVuZChuZXdfZGF0ZV9zcGFucykKICAgICAgICAgICAgYWxsX25lcl9zcGFucy5hcHBlbmQobmV3X2VudGl0eV9zcGFucykKCiAgICAgICAgc2F2ZVNwYW5NYXAoYWxsX2RhdGVfc3BhbnMsIGRhdGVfb3V0cHV0KQogICAgICAgIHNhdmVTcGFuTWFwKGFsbF9uZXJfc3BhbnMsIG5lcl9vdXRwdXQpCiAgICBlbHNlOgogICAgICAgICMgU2VnbWVudCBzZW50ZW5jZSBpbnRvIHNwYW5zOiBEQVRFcywgTkVScywgcGhyYXNlcywgTlVNQkVScywgdGhlbiBzaW5nbGUgdG9rZW5zLgogICAgICAgIGRhdGVfZmlsZSA9IG9zLnBhdGguam9pbihhcmdzLmRhdGFfZGlyLCAiZGF0ZS5zcGFucy50eHQiKQogICAgICAgIG5lcl9maWxlID0gb3MucGF0aC5qb2luKGFyZ3MuZGF0YV9kaXIsICJuZXIuc3BhbnMudHh0IikKICAgICAgICBwaHJhc2VfZmlsZSA9IG9zLnBhdGguam9pbihhcmdzLmRhdGFfZGlyLCAicGhyYXNlcyIpCiAgICAgICAgZGF0ZV9tYXBzID0gdXRpbHMubG9hZFNwYW5NYXAoZGF0ZV9maWxlLCB0eXBlPSJEQVRFIikKICAgICAgICBuZXJfbWFwcyA9IHV0aWxzLmxvYWRTcGFuTWFwKG5lcl9maWxlKQoKICAgICAgICBvcy5zeXN0ZW0oIm1rZGlyIC1wICVzIiAlIGFyZ3MucnVuX2RpcikKCiAgICAgICAgb3V0cHV0X3RvayA9IG9zLnBhdGguam9pbihhcmdzLnJ1bl9kaXIsICJ0b2tlbiIpCiAgICAgICAgb3V0cHV0X2xlbSA9IG9zLnBhdGguam9pbihhcmdzLnJ1bl9kaXIsICJsZW1tYSIpCiAgICAgICAgb3V0cHV0X3BvcyA9IG9zLnBhdGguam9pbihhcmdzLnJ1bl9kaXIsICJwb3MiKQogICAgICAgIGpzb25fb3V0cHV0ID0gb3MucGF0aC5qb2luKGFyZ3MucnVuX2RpciwgImRlY29kZS5qc29uIikKICAgICAgICBvdXRwdXRfY29ubGwgPSBvcy5wYXRoLmpvaW4oYXJncy5ydW5fZGlyLCAiY29uY2VwdCIpCgogICAgICAgIGZlYXRfZGltID0gNzUgIyBDdXJyZW50bHkgZml4ZWQKCiAgICAgICAgb3JhY2xlX3NldCA9IE9yYWNsZURhdGEoKQoKICAgICAgICB0b2tfd2YgPSBvcGVuKG91dHB1dF90b2ssICd3JykKICAgICAgICBsZW1tYV93ZiA9IG9wZW4ob3V0cHV0X2xlbSwgJ3cnKQogICAgICAgIHBvc193ZiA9IG9wZW4ob3V0cHV0X3BvcywgJ3cnKQogICAgICAgIGNvbmxsX3dmID0gb3BlbihvdXRwdXRfY29ubGwsICd3JykKCiAgICAgICAgIyBNYXAgZnJvbSBhIGZyZXF1ZW50IHBocmFzZSB0byBpdHMgbW9zdCBmcmVxdWVudCBjb25jZXB0LgogICAgICAgIHBocmFzZV9tYXAgPSB1dGlscy5sb2FkUGhyYXNlcyhwaHJhc2VfZmlsZSkKCiAgICAgICAgZm9yIChzZW50X2lkeCwgdG9rX3NlcSkgaW4gZW51bWVyYXRlKHRva3MpOgogICAgICAgICAgICAjIGlmIHNlbnRfaWR4ICE9IDU3OToKICAgICAgICAgICAgIyAgICAgY29udGludWUKICAgICAgICAgICAgbGVtbWFfc2VxLCBwb3Nfc2VxID0gbGVtc1tzZW50X2lkeF0sIHBvc3Nbc2VudF9pZHhdCiAgICAgICAgICAgIG5lcl9tYXAsIGRhdGVfbWFwID0gbmVyX21hcHNbc2VudF9pZHhdLCBkYXRlX21hcHNbc2VudF9pZHhdCgogICAgICAgICAgICBjb25jZXB0X3NlcSwgY2F0ZWdvcnlfc2VxLCBtYXBfaW5mb19zZXEgPSBbXSwgW10sIFtdCiAgICAgICAgICAgIGNvbmNlcHRfdG9fd29yZCA9IFtdCgogICAgICAgICAgICBhbmRfc3RydWN0dXJlID0gY2hlY2tfYW5kX3NlbnRlbmNlcygiICIuam9pbih0b2tfc2VxKSkKICAgICAgICAgICAgbXVsdGlfdG9rX2FuZCA9IGNoZWNrX2FuZF9zZW50ZW5jZXMoIiAiLmpvaW4odG9rX3NlcSksIHRva19udW09NSkKICAgICAgICAgICAgaWYgYW5kX3N0cnVjdHVyZToKICAgICAgICAgICAgICAgIGEgPSA1CiAgICAgICAgICAgICAgICAjIHByaW50ICJzZW50ZW5jZSBpbmRleCAlZCIgJSBzZW50X2lkeAogICAgICAgICAgICAgICAgIyBwcmludCAiICIuam9pbih0b2tfc2VxKQogICAgICAgICAgICBlbGlmIG11bHRpX3Rva19hbmQ6CiAgICAgICAgICAgICAgICBwcmludCAiICIuam9pbih0b2tfc2VxKQoKICAgICAgICAgICAgc3Bhbl90b190eXBlID0ge30KCiAgICAgICAgICAgIG5fdG9rcyA9IGxlbih0b2tfc2VxKQoKICAgICAgICAgICAgc3RhcnRfdG9fZW5kID0ge30KICAgICAgICAgICAgZm9yIChzdGFydCwgZW5kKSBpbiBkYXRlX21hcDoKICAgICAgICAgICAgICAgIHN0YXJ0X3RvX2VuZFtzdGFydF0gPSBlbmQKCiAgICAgICAgICAgIGZvciAoc3RhcnQsIGVuZCkgaW4gbmVyX21hcDoKICAgICAgICAgICAgICAgIGFzc2VydCBzdGFydCBub3QgaW4gc3RhcnRfdG9fZW5kCiAgICAgICAgICAgICAgICBzdGFydF90b19lbmRbc3RhcnRdID0gZW5kCgogICAgICAgICAgICB2aXNpdGVkID0gc2V0KCkKICAgICAgICAgICAgY29sbGFwc2VkX2lkeCA9IC0xCiAgICAgICAgICAgIGlmIG11bHRpX3Rva19hbmQ6CiAgICAgICAgICAgICAgICBjb25jZXB0X3NlcS5hcHBlbmQoImFuZCIpCiAgICAgICAgICAgICAgICBjYXRlZ29yeV9zZXEuYXBwZW5kKCJhbmQiKQogICAgICAgICAgICAgICAgaWYgYW5kX3N0cnVjdHVyZToKICAgICAgICAgICAgICAgICAgICBtYXBfaW5mb19zZXEuYXBwZW5kKCJBTkR8fEFORCIpCiAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgIG1hcF9pbmZvX3NlcS5hcHBlbmQoIkFORDF8fEFORDEiKQogICAgICAgICAgICAgICAgY29uY2VwdF90b193b3JkLmFwcGVuZCgtMSkKICAgICAgICAgICAgZm9yICh0b2tfaWR4LCBjdXJyX3RvaykgaW4gZW51bWVyYXRlKHRva19zZXEpOgogICAgICAgICAgICAgICAgaWYgdG9rX2lkeCBpbiB2aXNpdGVkOgogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCgogICAgICAgICAgICAgICAgY29sbGFwc2VkX2lkeCArPSAxCiAgICAgICAgICAgICAgICAjIEZpcnN0IHNlYXJjaCBmb3IgREFURXMgb3IgTkVScy4KICAgICAgICAgICAgICAgIGlmIHRva19pZHggaW4gc3RhcnRfdG9fZW5kOgogICAgICAgICAgICAgICAgICAgIGVuZF9pZHggPSBzdGFydF90b19lbmRbdG9rX2lkeF0KICAgICAgICAgICAgICAgICAgICBpZiAodG9rX2lkeCwgZW5kX2lkeCkgaW4gZGF0ZV9tYXA6CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmNlcHRfc2VxLmFwcGVuZCgiREFURSIpCiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGVnb3J5X3NlcS5hcHBlbmQoIkRBVEUiKQogICAgICAgICAgICAgICAgICAgICAgICBtYXBfaW5mbyA9ICIlc3x8Tk9ORSIgJSAiXyIuam9pbih0b2tfc2VxW3Rva19pZHg6ZW5kX2lkeF0pCiAgICAgICAgICAgICAgICAgICAgICAgIG1hcF9pbmZvX3NlcS5hcHBlbmQobWFwX2luZm8pCiAgICAgICAgICAgICAgICAgICAgICAgIHNwYW5fdG9fdHlwZVsodG9rX2lkeCwgZW5kX2lkeCldID0gKC0xLCAtMSwgIkRBVEUiKQogICAgICAgICAgICAgICAgICAgICAgICBhc3NlcnQgIl8iLmpvaW4odG9rX3NlcVt0b2tfaWR4OmVuZF9pZHhdKSA9PSBkYXRlX21hcFsodG9rX2lkeCwgZW5kX2lkeCldCiAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgbmVfdHlwZSwgd2lraV9zdHIgPSBuZXJfbWFwWyh0b2tfaWR4LCBlbmRfaWR4KV0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgbmVfdHlwZSA9PSAiUkVFTlQiIG9yIG5lX3R5cGUgPT0gIkFCQlJFViI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aXNpdGVkIHw9IHNldChyYW5nZSh0b2tfaWR4LCBlbmRfaWR4KSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwYW5fdG9fdHlwZVsodG9rX2lkeCwgZW5kX2lkeCldID0gKC0xLCAiLSIsICJORSIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgICAgICAgICBjb25jZXB0X3NlcS5hcHBlbmQobmVfdHlwZSkKICAgICAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnlfc2VxLmFwcGVuZChnZXRDYXRlZ29yaWVzKG5lX3R5cGUsIGZyZXF1ZW50X3NldCkpCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIHdpa2lfc3RyID09ICItIiBvciBsZW4od2lraV9zdHIuc3BsaXQoIi0tIikpICE9IDI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2tfcmVwciA9ICJfIi5qb2luKHRva19zZXFbdG9rX2lkeDplbmRfaWR4XSkucmVwbGFjZSgiX0BfLV9AXyIsICItIikKICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzc2VydCBsZW4od2lraV9zdHIuc3BsaXQoIi0tIikpID09IDIsIHdpa2lfc3RyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2tfcmVwciA9IHdpa2lfc3RyLnNwbGl0KCItLSIpWzBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWtpX3N0ciA9IHdpa2lfc3RyLnNwbGl0KCItLSIpWzFdCiAgICAgICAgICAgICAgICAgICAgICAgIG1hcF9pbmZvID0gIiVzfHwlcyIgJSAodG9rX3JlcHIsIHdpa2lfc3RyKQogICAgICAgICAgICAgICAgICAgICAgICBtYXBfaW5mb19zZXEuYXBwZW5kKG1hcF9pbmZvKQogICAgICAgICAgICAgICAgICAgICAgICBzcGFuX3RvX3R5cGVbKHRva19pZHgsIGVuZF9pZHgpXSA9ICgtMSwgd2lraV9zdHIsIG5lX3R5cGUpCiAgICAgICAgICAgICAgICAgICAgY29uY2VwdF90b193b3JkLmFwcGVuZChjb2xsYXBzZWRfaWR4KQoKICAgICAgICAgICAgICAgICAgICB2aXNpdGVkIHw9IHNldChyYW5nZSh0b2tfaWR4LCBlbmRfaWR4KSkKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQoKICAgICAgICAgICAgICAgICMgVGhlbiB3ZSBmdXJ0aGVyIGNoZWNrIGlmIHRoZXJlIGlzIGFueSBtdWx0aS10b2tlbiByZXByZXNlbnRhdGlvbnMuCiAgICAgICAgICAgICAgICBmb3IgZW5kX2lkeCBpbiB4cmFuZ2Uobl90b2tzLCB0b2tfaWR4LCAtMSk6CiAgICAgICAgICAgICAgICAgICAgY292ZXJlZCA9IHNldCh4cmFuZ2UodG9rX2lkeCwgZW5kX2lkeCkpCiAgICAgICAgICAgICAgICAgICAgaWYgbGVuKHZpc2l0ZWQgJiBjb3ZlcmVkKSAhPSAwOgogICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZQoKICAgICAgICAgICAgICAgICAgICBpZiBpZGVudGlmeU51bWJlcih0b2tfc2VxW3Rva19pZHg6ZW5kX2lkeF0sIG1sZV9tYXApOgogICAgICAgICAgICAgICAgICAgICAgICBjb25jZXB0X3NlcS5hcHBlbmQoIk5VTUJFUiIpCiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGVnb3J5X3NlcS5hcHBlbmQoIk5VTUJFUiIpCiAgICAgICAgICAgICAgICAgICAgICAgIG1hcF9pbmZvID0gIiVzfHxOT05FIiAlICJfIi5qb2luKHRva19zZXFbdG9rX2lkeDplbmRfaWR4XSkKICAgICAgICAgICAgICAgICAgICAgICAgbWFwX2luZm9fc2VxLmFwcGVuZChtYXBfaW5mbykKICAgICAgICAgICAgICAgICAgICAgICAgY29uY2VwdF90b193b3JkLmFwcGVuZChjb2xsYXBzZWRfaWR4KQogICAgICAgICAgICAgICAgICAgICAgICBzcGFuX3RvX3R5cGVbKHRva19pZHgsIGVuZF9pZHgpXSA9ICgtMSwgIk5PTkUiLCAiTlVNQkVSIikKICAgICAgICAgICAgICAgICAgICAgICAgdmlzaXRlZCB8PSBzZXQocmFuZ2UodG9rX2lkeCwgZW5kX2lkeCkpCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrCgogICAgICAgICAgICAgICAgICAgIHRva19zdHIgPSAiICIuam9pbih0b2tfc2VxW3Rva19pZHg6ZW5kX2lkeF0pCiAgICAgICAgICAgICAgICAgICAgbGVtX3N0ciA9ICIgIi5qb2luKGxlbW1hX3NlcVt0b2tfaWR4OmVuZF9pZHhdKQogICAgICAgICAgICAgICAgICAgIGlmIHRva19zdHIgaW4gcGhyYXNlX21hcCBvciBsZW1fc3RyIGluIHBocmFzZV9tYXA6CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIHRva19zdHIgaW4gcGhyYXNlX21hcDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmNlcHRfcmVwciA9IHBocmFzZV9tYXBbdG9rX3N0cl0KICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbmNlcHRfcmVwciA9IHBocmFzZV9tYXBbbGVtX3N0cl0KICAgICAgICAgICAgICAgICAgICAgICAgY29uY2VwdF9zZXEuYXBwZW5kKGNvbmNlcHRfcmVwcikKICAgICAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnkgPSBnZXRDYXRlZ29yaWVzKGNvbmNlcHRfcmVwciwgZnJlcXVlbnRfc2V0KQogICAgICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeV9zZXEuYXBwZW5kKGNhdGVnb3J5KQogICAgICAgICAgICAgICAgICAgICAgICBtYXBfaW5mbyA9ICIlc3x8JXMiICUgKCJfIi5qb2luKHRva19zZXFbdG9rX2lkeDplbmRfaWR4XSksIGNvbmNlcHRfcmVwcikKICAgICAgICAgICAgICAgICAgICAgICAgbWFwX2luZm9fc2VxLmFwcGVuZChtYXBfaW5mbykKICAgICAgICAgICAgICAgICAgICAgICAgY29uY2VwdF90b193b3JkLmFwcGVuZChjb2xsYXBzZWRfaWR4KQogICAgICAgICAgICAgICAgICAgICAgICBzcGFuX3RvX3R5cGVbKHRva19pZHgsIGVuZF9pZHgpXSA9ICgtMSwgY29uY2VwdF9yZXByLCAiUEhSQVNFIikKICAgICAgICAgICAgICAgICAgICAgICAgdmlzaXRlZCB8PSBzZXQocmFuZ2UodG9rX2lkeCwgZW5kX2lkeCkpCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrCgogICAgICAgICAgICAgICAgaWYgdG9rX2lkeCBpbiB2aXNpdGVkOgogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCgogICAgICAgICAgICAgICAgY3Vycl90b2sgPSBjdXJyX3Rvay5sb3dlcigpCiAgICAgICAgICAgICAgICBjdXJyX2xlbSwgY3Vycl9wb3MgPSBsZW1tYV9zZXFbdG9rX2lkeF0ubG93ZXIoKSwgcG9zX3NlcVt0b2tfaWR4XQogICAgICAgICAgICAgICAgaWYgY3Vycl90b2sgaW4gbWxlX21hcCBvciBjdXJyX2xlbSBpbiBtbGVMZW1tYU1hcDoKICAgICAgICAgICAgICAgICAgICBpZiBjdXJyX3RvayBpbiBtbGVfbWFwOgogICAgICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeSwgY29uY2VwdF9yZXByID0gbWxlX21hcFtjdXJyX3Rva10KICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeSwgY29uY2VwdF9yZXByID0gbWxlTGVtbWFNYXBbY3Vycl9sZW1dCiAgICAgICAgICAgICAgICAgICAgaWYgY2F0ZWdvcnkgIT0gIk5PTkUiIGFuZCBub3QgdXRpbHMuZW50aXR5X2NhdGVnb3J5KGNhdGVnb3J5KToKICAgICAgICAgICAgICAgICAgICAgICAgc3Bhbl90b190eXBlWyh0b2tfaWR4LCB0b2tfaWR4KzEpXSA9ICgtMSwgY29uY2VwdF9yZXByLCBjYXRlZ29yeSkKCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIHV0aWxzLnNwZWNpYWxfY2F0ZWdvcmllcyhjYXRlZ29yeSk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25jZXB0X3NlcS5hcHBlbmQoY2F0ZWdvcnkpCiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIGFzc2VydCAiICIgbm90IGluIGNvbmNlcHRfcmVwciwgY29uY2VwdF9yZXByCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25jZXB0X3NlcS5hcHBlbmQoY29uY2VwdF9yZXByLnNwbGl0KCIgIilbMF0pCiAgICAgICAgICAgICAgICAgICAgICAgIG1hcF9yZXByID0gY29uY2VwdF9yZXByCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIGNvbmNlcHRfcmVwcls6M10gPT0gIk5FRyI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXBfcmVwciA9ICIlcyBwb2xhcml0eTotIiAlIGNvbmNlcHRfcmVwcls0Ol0KICAgICAgICAgICAgICAgICAgICAgICAgbWFwX2luZm8gPSAiJXN8fCVzIiAlIChjdXJyX3RvaywgbWFwX3JlcHIpCiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGVnb3J5ID0gZ2V0Q2F0ZWdvcmllcyhjYXRlZ29yeSwgZnJlcXVlbnRfc2V0KQogICAgICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeV9zZXEuYXBwZW5kKGNhdGVnb3J5KQogICAgICAgICAgICAgICAgICAgICAgICBtYXBfaW5mb19zZXEuYXBwZW5kKG1hcF9pbmZvKQogICAgICAgICAgICAgICAgICAgICAgICBjb25jZXB0X3RvX3dvcmQuYXBwZW5kKGNvbGxhcHNlZF9pZHgpCiAgICAgICAgICAgICAgICAgICAgdmlzaXRlZC5hZGQodG9rX2lkeCkKICAgICAgICAgICAgICAgIGVsaWYgY3Vycl90b2sgaW4gVkVSQl9MSVNUIG9yIGN1cnJfbGVtIGluIFZFUkJfTElTVDoKICAgICAgICAgICAgICAgICAgICBpZiBjdXJyX3RvayBpbiBWRVJCX0xJU1Q6CiAgICAgICAgICAgICAgICAgICAgICAgIHN1YmdyYXBoID0gVkVSQl9MSVNUW2N1cnJfdG9rXVswXQogICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgIHN1YmdyYXBoID0gVkVSQl9MSVNUW2N1cnJfbGVtXVswXQogICAgICAgICAgICAgICAgICAgIHN1YmdyYXBoX3JlcHIgPSBhbGlnbm1lbnRfdXRpbHMuc3ViZ3JhcGhfc3RyKHN1YmdyYXBoKQogICAgICAgICAgICAgICAgICAgICMgcHJpbnQgIlJldHJpZXZlZDogJXMgLT4gJXMiICUgKGN1cnJfdG9rLCBzdWJncmFwaF9yZXByKQogICAgICAgICAgICAgICAgICAgIHJvb3RfcmVwciA9IHN1YmdyYXBoX3JlcHIuc3BsaXQoKVswXS5zdHJpcCgpCiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnkgPSAiTVVMVF8lcyIgJSByb290X3JlcHIKICAgICAgICAgICAgICAgICAgICBzcGFuX3RvX3R5cGVbKHRva19pZHgsIHRva19pZHgrMSldID0gKC0xLCBzdWJncmFwaF9yZXByLCBjYXRlZ29yeSkKICAgICAgICAgICAgICAgICAgICBjb25jZXB0X3NlcS5hcHBlbmQoY2F0ZWdvcnkpCiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnkgPSBnZXRDYXRlZ29yaWVzKGNhdGVnb3J5LCBmcmVxdWVudF9zZXQpCiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnlfc2VxLmFwcGVuZChjYXRlZ29yeSkKICAgICAgICAgICAgICAgICAgICBtYXBfaW5mbyA9ICIlc3x8JXMiICUgKGN1cnJfdG9rLCBzdWJncmFwaF9yZXByKQogICAgICAgICAgICAgICAgICAgIG1hcF9pbmZvX3NlcS5hcHBlbmQobWFwX2luZm8pCiAgICAgICAgICAgICAgICAgICAgY29uY2VwdF90b193b3JkLmFwcGVuZChjb2xsYXBzZWRfaWR4KQogICAgICAgICAgICAgICAgZWxpZiBub3QgdXRpbHMuYWxsU3ltYm9scyhjdXJyX3Rvayk6CiAgICAgICAgICAgICAgICAgICAgY3Vycl9yZXByID0gY3Vycl9sZW0KICAgICAgICAgICAgICAgICAgICBpZiBjdXJyX3Bvc1swXSA9PSAiViI6CiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJfcmVwciA9ICIlcy0wMSIgJSBjdXJyX2xlbQogICAgICAgICAgICAgICAgICAgIGN1cnJfY2F0ZWdvcnkgPSBjdXJyX3JlcHIKICAgICAgICAgICAgICAgICAgICBzcGFuX3RvX3R5cGVbKHRva19pZHgsIHRva19pZHgrMSldID0gKC0xLCBjdXJyX3JlcHIsIGN1cnJfY2F0ZWdvcnkpCiAgICAgICAgICAgICAgICAgICAgY29uY2VwdF9zZXEuYXBwZW5kKGN1cnJfcmVwcikKICAgICAgICAgICAgICAgICAgICBjYXRlZ29yeSA9IGdldENhdGVnb3JpZXMoY3Vycl9yZXByLCBmcmVxdWVudF9zZXQpCiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnlfc2VxLmFwcGVuZChjYXRlZ29yeSkKICAgICAgICAgICAgICAgICAgICBtYXBfaW5mbyA9ICIlc3x8JXMiICUgKGN1cnJfdG9rLCBjdXJyX3JlcHIpCiAgICAgICAgICAgICAgICAgICAgbWFwX2luZm9fc2VxLmFwcGVuZChtYXBfaW5mbykKICAgICAgICAgICAgICAgICAgICBjb25jZXB0X3RvX3dvcmQuYXBwZW5kKGNvbGxhcHNlZF9pZHgpCgogICAgICAgICAgICAjIHByaW50IHNwYW5fdG9fdHlwZQogICAgICAgICAgICBjb2xsYXBzZWRfdG9rcywgY29sbGFwc2VkX2xlbSwgY29sbGFwc2VkX3BvcywgXywgXyA9IGNvbGxhcHNlVG9rZW5zKAogICAgICAgICAgICAgICAgdG9rX3NlcSwgbGVtbWFfc2VxLCBwb3Nfc2VxLCBzcGFuX3RvX3R5cGUsIEZhbHNlLCAyMCkKICAgICAgICAgICAgYXNzZXJ0IGxlbihjb2xsYXBzZWRfdG9rcykgPT0gY29sbGFwc2VkX2lkeCArIDEsICIlczolZDolZCIgJSAoc3RyKGNvbGxhcHNlZF90b2tzKSwgc2VudF9pZHgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxhcHNlZF9pZHgrMSkKICAgICAgICAgICAgYXNzZXJ0IGxlbihjb25jZXB0X3NlcSkgPT0gbGVuKGNhdGVnb3J5X3NlcSkKICAgICAgICAgICAgYXNzZXJ0IGxlbihjb25jZXB0X3NlcSkgPT0gbGVuKG1hcF9pbmZvX3NlcSkKICAgICAgICAgICAgYXNzZXJ0IGxlbihjb25jZXB0X3NlcSkgPT0gbGVuKGNvbmNlcHRfdG9fd29yZCkKCiAgICAgICAgICAgIHByaW50ID4+IHRva193ZiwgKCIgIi5qb2luKGNvbGxhcHNlZF90b2tzKSkKICAgICAgICAgICAgcHJpbnQgPj4gbGVtbWFfd2YsICgiICIuam9pbihjb2xsYXBzZWRfbGVtKSkKICAgICAgICAgICAgcHJpbnQgPj4gcG9zX3dmLCAoIiAiLmpvaW4oY29sbGFwc2VkX3BvcykpCiAgICAgICAgICAgIHByaW50ID4+IGNvbmxsX3dmLCAnc2VudGVuY2UgJWQnICUgc2VudF9pZHgKICAgICAgICAgICAgZm9yIChjb25jZXB0X2lkeCwgY29uY2VwdCkgaW4gZW51bWVyYXRlKGNvbmNlcHRfc2VxKToKICAgICAgICAgICAgICAgIGFsaWduX3dpZHggPSBjb25jZXB0X3RvX3dvcmRbY29uY2VwdF9pZHhdCiAgICAgICAgICAgICAgICBwcmludCA+PiBjb25sbF93ZiwgIiVkXHQlc1x0JXNcdCVzXHQlcyIgJSAoCiAgICAgICAgICAgICAgICAgICAgY29uY2VwdF9pZHgsIGNvbmNlcHQsIGNhdGVnb3J5X3NlcVtjb25jZXB0X2lkeF0sIG1hcF9pbmZvX3NlcVtjb25jZXB0X2lkeF0sCiAgICAgICAgICAgICAgICAgICAgY29sbGFwc2VkX3Rva3NbYWxpZ25fd2lkeF0pCiAgICAgICAgICAgIHByaW50ID4+IGNvbmxsX3dmLCAiIgoKICAgICAgICAgICAgIyBOZXh0IHdlIHByZXBhcmUgdGhlIGlucHV0IGZpbGVzIGZvciB0aGUgZGVjb2Rlci4KICAgICAgICAgICAgb3JhY2xlX3NlcSA9IFsiU0hJRlQiLCAiUE9QIl0gKiBsZW4oY29uY2VwdF9zZXEpCiAgICAgICAgICAgIG51bV9hY3Rpb25zID0gbGVuKG9yYWNsZV9zZXEpICMgIlNISUZUIiwgIlBPUCIgZm9yIGVhY2ggY29uY2VwdAogICAgICAgICAgICBmZWF0X3NlcSA9IFtbIiJdICogZmVhdF9kaW0gZm9yIF8gaW4gcmFuZ2UobnVtX2FjdGlvbnMpXQogICAgICAgICAgICB3b3JkX2FsaWduID0gWy0xXSAqIG51bV9hY3Rpb25zCiAgICAgICAgICAgIGNvbmNlcHRfYWxpZ24gPSBbLTFdICogbnVtX2FjdGlvbnMKICAgICAgICAgICAgYXNzZXJ0IGxlbigoIiAiKS5qb2luKGNvbmNlcHRfc2VxKS5zcGxpdCgiICIpKSA9PSBsZW4oY29uY2VwdF9zZXEpLCBjb25jZXB0X3NlcQogICAgICAgICAgICBvcmFjbGVfZXhhbXBsZSA9IE9yYWNsZUV4YW1wbGUoY29sbGFwc2VkX3Rva3MsIGNvbGxhcHNlZF9sZW0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsYXBzZWRfcG9zLCBjb25jZXB0X3NlcSwgY2F0ZWdvcnlfc2VxLCBtYXBfaW5mb19zZXEsIGZlYXRfc2VxLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3JhY2xlX3NlcSwgd29yZF9hbGlnbiwgY29uY2VwdF9hbGlnbiwgY29uY2VwdF90b193b3JkKQogICAgICAgICAgICBvcmFjbGVfc2V0LmFkZEV4YW1wbGUob3JhY2xlX2V4YW1wbGUpCgogICAgICAgIHRva193Zi5jbG9zZSgpCiAgICAgICAgbGVtbWFfd2YuY2xvc2UoKQogICAgICAgIHBvc193Zi5jbG9zZSgpCiAgICAgICAgY29ubGxfd2YuY2xvc2UoKQogICAgICAgIG9yYWNsZV9zZXQudG9KU09OKGpzb25fb3V0cHV0KQ==</text>
      </register>
      <register name="1" type="4">
        <text># word_repr = '#'.join([str(tok_id) for tok_id in word_indices]) if word_indices else 'NONE'
            # start, end = tok_to_orig[curr_span[0]], tok_to_orig[curr_span[1]-1] + 1</text>
      </register>
      <register name="q" type="4">
        <text />
      </register>
      <register name="2" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgIAo=</text>
      </register>
      <register name="3" type="4">
        <text># assert curr_span
                # for (start, end) in new_alignment[index]:
                #     for tok_id in xrange(start, end):
                #         word_indices.append(tok_id)</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgIAo=</text>
      </register>
      <register name="5" type="4">
        <text># assert curr_span
                # for (start, end) in new_alignment[index]:
                #     for tok_id in xrange(start, end):
                #         word_indices.append(tok_id)</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgIAo=</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">ICAgICAgICAgICAgbGVtbWFfc2VxLCBwb3Nfc2VxID0gbGVtc1tzZW50X2lkeF0sIHBvc3Nbc2VudF9pZHhdCg==</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">ICAgICAgICBhc3NlcnQgbGVuKG9yaWdfdG9rX3NlcSkgPT0gbGVuKHBvc19zZXEpCg==</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">ICAgICAgICAK</text>
      </register>
      <register name=":" type="4">
        <text>w</text>
      </register>
    </registers>
    <search>
      <last-search>node_to_span</last-search>
      <last-offset />
      <last-pattern>node_to_span</last-pattern>
      <last-replace>unaligned_set</last-replace>
      <last-substitute>temp_unaligned</last-substitute>
      <last-dir>1</last-dir>
      <show-last>true</show-last>
    </search>
    <history>
      <history-search>
        <entry>node_alignm</entry>
        <entry>phrases</entry>
        <entry>class Sub</entry>
        <entry>oracle su</entry>
        <entry>success_num</entry>
        <entry>start_to_end</entry>
        <entry>origToNew</entry>
        <entry>all_a</entry>
        <entry>all_align</entry>
        <entry>uniform</entry>
        <entry>collapsed_map</entry>
        <entry>idx_to_</entry>
        <entry>idx_to_collapsed</entry>
        <entry>nodeid</entry>
        <entry>all_ali</entry>
        <entry>collapsed</entry>
        <entry>collapseTo</entry>
        <entry>word_indices</entry>
        <entry>in_path</entry>
        <entry>options</entry>
        <entry>feat_num</entry>
        <entry>test_uniform</entry>
        <entry>prepare</entry>
        <entry>feat_seq</entry>
        <entry>feat_dim</entry>
        <entry>realign</entry>
        <entry encoding="base64">XDxhc3NlcnRcPg==</entry>
        <entry>special_token</entry>
        <entry>curr_len</entry>
        <entry>concept_catego</entry>
        <entry>idx_to_co</entry>
        <entry>curr_span</entry>
        <entry>new_alignment</entry>
        <entry>align</entry>
        <entry>node_to_spans</entry>
        <entry>node_to_span</entry>
      </history-search>
      <history-cmd>
        <entry>480</entry>
        <entry>520</entry>
        <entry>q</entry>
        <entry>570</entry>
        <entry>571</entry>
        <entry>224</entry>
        <entry>set noic</entry>
        <entry>364</entry>
        <entry>%s/temp_unaligned/unaligned_set/g</entry>
        <entry>71</entry>
        <entry>663</entry>
        <entry>668</entry>
        <entry>740</entry>
        <entry>359</entry>
        <entry>792</entry>
        <entry>742</entry>
        <entry>744</entry>
        <entry>212</entry>
        <entry>209</entry>
        <entry>142</entry>
        <entry>1</entry>
        <entry>431</entry>
        <entry>w</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed J</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed SPACE</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>meta pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed K</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>meta pressed L</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed L</text>
      </shortcut-conflict>
    </shortcut-conflicts>
    <editor>
      <key-repeat enabled="true" />
    </editor>
  </component>
</application>